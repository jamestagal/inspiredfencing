import{SvelteComponent,append_hydration,attr,children,claim_element,claim_space,claim_text,detach,element,init,insert_hydration,noop,safe_not_equal,space,text}from"../../web_modules/svelte/internal/index.mjs";function create_fragment(){let A,y,m,ae,Z1,G1,se,Y1,q1,Z,K1,$1,j,c,k,I1,H1,N,P1,R1,_,D1,z1,x,M1,S1,w,E1,C1,M,w1,_1,z,b1,v1,L,f1,m1,r,T,u,V,$,d1,l1,K,a1,i1,n,Kn,Un,n1,t1,Nn,Tn,Zu,Qu,kn,Qe,Yu,qu,Ke,$e,Wu,$u,he,me,Iu,Hu,ge,ve,Lu,Nu,ye,_e,Tu,Fu,xe,Ce,Au,ku,Ae,Se,xu,Ou,Te,ze,yu,ju,Le,Re,gu,pu,Ie,Be,fu,uu,We,Ue,cu,ru,Ye,Ge,au,iu,Ze,Je,nu,tu,nt,st,Zd,Qd,at,rt,Yd,qd,dt,ut,Wd,$d,ft,pt,Id,Hd,bt,jt,Ld,Nd,wt,Ot,Td,Fd,Et,kt,Ad,kd,Mt,Ft,xd,Od,Dt,Nt,yd,jd,Pt,Ht,gd,pd,Vt,$t,hd,ud,Kt,qt,cd,rd,Xt,Qt,od,sd,en,tn,ed,Jl,on,an,Xl,Gl,ln,dn,Kl,Ul,mn,fn,Vl,Bl,vn,bn,Pl,Rl,_n,wn,Dl,zl,Cn,En,ra,Tl,de,Mn,Sl,El,zn,Dn,Cl,xl,Rn,Pn,Ol,yl,Bn,Vn,jl,gl,E,p,Y,q,pl,hl,U,ul,cl,a,ts,ns,rl,ol,is,rs,sl,el,ds,us,Jc,Xc,fs,ps,Gc,Kc,bs,js,Uc,Vc,ws,Os,Bc,Pc,Es,ks,Rc,Dc,Ms,Fs,zc,Mc,b,f,P,H,Sc,Ec,I,Cc,wc,s,Ws,Us,_c,bc,Ys,Gs,vc,fc,Zs,Js,mc,dc,no,so,lc,ac,ao,ro,ic,nc,uo,ho,tc,Zr,po,go,Qr,Yr,jo,yo,qr,Wr,Oo,xo,$r,Ir,ko,Ao,Hr,Lr,Fo,To,Nr,Tr,No,Lo,Fr,Ar,Ho,Io,kr,xr,$o,Wo,Or,yr,qo,Yo,jr,gr,Qo,Zo,pr,hr,ti,ni,ur,cr,ii,ai,rr,or,li,di,sr,er,mi,fi,Ja,Xa,vi,bi,Ga,Ka,_i,wi,Ua,Va,Ci,Ei,Ba,Pa,Si,Mi,Ra,Da,zi,Di,za,Ma,Ri,Pi,Sa,Ea,Bi,Vi,Ca,wa,O,l,B,W,_a,ba,G,va,fa,t,ta,na,ma,da,ia,aa,la,ca,Sn,oa,ua,ha,sa,Ji,pa,ga,Zi,Xi,ja,ya,Gi,Wi,Oa,xa,$i,Ii,ka,Aa,Hi,Li,Fa,Ta,Ni,Ti,Na,La,Fi,Ai,Ha,Ia,ki,xi,$a,Wa,Oi,yi,qa,Ya,ji,gi,Qa,Za,pi,hi,tr,nr,ui,ci,ir,ar,ri,oi,lr,dr,si,ei,mr,fr,Jo,Xo,vr,br,Go,Ko,_r,wr,Uo,Vo,Cr,Er,Bo,Po,Sr,Mr,Ro,Do,zr,Dr,zo,Mo,Rr,Pr,So,Eo,Br,Vr,Co,wo,Ur,Kr,_o,bo,Gr,Xr,vo,fo,Jr,ec,mo,lo,sc,oc,co,io,rc,cc,oo,to,uc,hc,eo,Qs,pc,gc,Xs,qs,jc,yc,Ks,Vs,Oc,xc,Bs,Hs,kc,Ac,Ps,zs,Fc,Tc,Ts,Ss,Nc,Lc,As,Cs,Hc,Ic,xs,_s,$c,Wc,ys,vs,qc,Yc,gs,ms,Qc,Zc,hs,ue,tl,nl,cs,os,il,al,ss,Jn,ll,dl,Zn,Xn,ml,fl,Gn,Wn,vl,bl,$n,In,_l,wl,C,d,ee,te,kl,Al,ne,Ml,Fl,o,xn,On,Nl,Ll,yn,jn,Hl,Il,gn,pn,$l,Wl,hn,un,ql,Yl,cn,rn,Ql,Zl,sn,nn,td,nd,Jt,Zt,id,ad,Gt,Yt,ld,dd,Ut,Wt,md,fd,Bt,It,vd,bd,Rt,Lt,_d,wd,zt,Tt,Cd,Ed,St,At,Sd,Md,Ct,xt,zd,Dd,_t,yt,Rd,Pd,vt,gt,Bd,Vd,mt,ht,Ud,Kd,lt,ct,Gd,Xd,it,ot,Jd,eu,tt,et,su,ou,F,h,re,ce,lu,du,le,hu,mu,i,He,Pe,vu,bu,Ne,De,_u,wu,Fe,Me,Cu,Eu,ke,Ee,Su,Mu,Oe,we,zu,Du,je,be,Ru,Pu,pe,fe,Bu,Vu,ls,Ve,Uu,Ku,qe,Xe,Gu,Xu,An,Fn,Ju,e1,Ln,Hn,s1,o1,qn,Yn,r1,c1,Qn,es,u1,h1,Ds,Ns,p1,g1,Ls,Rs,j1,y1,Is,$s,O1,x1,Ui,Ki,k1,A1,qi,Yi,F1,T1,Qi,ea,N1,L1,D,g,X,R,B1,V1,Q,W1,U1,S,v,J,oe,X1,Q1,ie,J1;return{c(){A=element("section"),y=element("div"),m=element("div"),ae=element("span"),Z1=text("Service Areas"),G1=space(),se=element("h2"),Y1=text("Areas We Service"),q1=space(),Z=element("p"),K1=text("Inspired Fencing offers services across the areas of the Mornington Peninsula, Frankston, Casey, Kingston, Bass Coast, Cardinia, Baw Baw and South Gippsland. Please see below for an overview and a detailed list of the suburbs and localities we cover."),$1=space(),j=element("div"),c=element("div"),k=element("button"),I1=text("Mornington Peninsula"),H1=space(),N=element("button"),P1=text("Frankston City"),R1=space(),_=element("button"),D1=text("Casey"),z1=space(),x=element("button"),M1=text("Cardinia"),S1=space(),w=element("button"),E1=text("Kingston"),C1=space(),M=element("button"),w1=text("Bass Coast"),_1=space(),z=element("button"),b1=text("Baw Baw"),v1=space(),L=element("button"),f1=text("South Gippsland"),m1=space(),r=element("div"),T=element("ul"),u=element("li"),V=element("button"),$=element("span"),d1=text("Mornington Peninsula"),l1=space(),K=element("p"),a1=text("Comprising a mixture of urban areas, coastal resort towns, development and rural farm land, the Mornington Peninsula makes way for a wide range of fencing and gate styles. Paling, colorbond and feature front fences are most common in the urban areas but you will find many attractive brush styles particularly in the more beach and coastal regions."),i1=space(),n=element("ul"),Kn=element("li"),Un=element("span"),n1=text("Arthurs Seat"),t1=space(),Nn=element("li"),Tn=element("span"),Zu=text("Balnarring"),Qu=space(),kn=element("li"),Qe=element("span"),Yu=text("Balnarring Beach"),qu=space(),Ke=element("li"),$e=element("span"),Wu=text("Baxter"),$u=space(),he=element("li"),me=element("span"),Iu=text("Bittern"),Hu=space(),ge=element("li"),ve=element("span"),Lu=text("Blairgowrie"),Nu=space(),ye=element("li"),_e=element("span"),Tu=text("Boneo"),Fu=space(),xe=element("li"),Ce=element("span"),Au=text("Cape Schanck"),ku=space(),Ae=element("li"),Se=element("span"),xu=text("Capel Sound"),Ou=space(),Te=element("li"),ze=element("span"),yu=text("Crib Point"),ju=space(),Le=element("li"),Re=element("span"),gu=text("Dromana"),pu=space(),Ie=element("li"),Be=element("span"),fu=text("Fingal"),uu=space(),We=element("li"),Ue=element("span"),cu=text("Flinders"),ru=space(),Ye=element("li"),Ge=element("span"),au=text("Hastings"),iu=space(),Ze=element("li"),Je=element("span"),nu=text("HMAS Cerberus"),tu=space(),nt=element("li"),st=element("span"),Zd=text("Main Ridge"),Qd=space(),at=element("li"),rt=element("span"),Yd=text("McCrae"),qd=space(),dt=element("li"),ut=element("span"),Wd=text("Merricks"),$d=space(),ft=element("li"),pt=element("span"),Id=text("Merricks Beach"),Hd=space(),bt=element("li"),jt=element("span"),Ld=text("Merricks North"),Nd=space(),wt=element("li"),Ot=element("span"),Td=text("Moorooduc"),Fd=space(),Et=element("li"),kt=element("span"),Ad=text("Mornington"),kd=space(),Mt=element("li"),Ft=element("span"),xd=text("Mount Eliza"),Od=space(),Dt=element("li"),Nt=element("span"),yd=text("Mount Martha"),jd=space(),Pt=element("li"),Ht=element("span"),gd=text("Pearcedale (part)"),pd=space(),Vt=element("li"),$t=element("span"),hd=text("Point Leo"),ud=space(),Kt=element("li"),qt=element("span"),cd=text("Portsea"),rd=space(),Xt=element("li"),Qt=element("span"),od=text("Red Hill"),sd=space(),en=element("li"),tn=element("span"),ed=text("Red Hill South"),Jl=space(),on=element("li"),an=element("span"),Xl=text("Rosebud"),Gl=space(),ln=element("li"),dn=element("span"),Kl=text("Rye"),Ul=space(),mn=element("li"),fn=element("span"),Vl=text("Safety Beach"),Bl=space(),vn=element("li"),bn=element("span"),Pl=text("Shoreham"),Rl=space(),_n=element("li"),wn=element("span"),Dl=text("Somers"),zl=space(),Cn=element("li"),En=element("span"),ra=text("Somerville"),Tl=space(),de=element("li"),Mn=element("span"),Sl=text("Sorrento"),El=space(),zn=element("li"),Dn=element("span"),Cl=text("St Andrews Beach"),xl=space(),Rn=element("li"),Pn=element("span"),Ol=text("Tootgarook"),yl=space(),Bn=element("li"),Vn=element("span"),jl=text("Tuerong and Tyabb"),gl=space(),E=element("ul"),p=element("li"),Y=element("button"),q=element("span"),pl=text("Frankston City"),hl=space(),U=element("p"),ul=text("The district has many major industry sectors including construction, manufacturing, retail, property and personal business services. Many fences and fencing solutions are required across the City of Frankston. With older homes and building requiring maintenance as well as multiple property developments across different areas new construction and maintenance is always needed."),cl=space(),a=element("ul"),ts=element("li"),ns=element("span"),rl=text("Carrum Downs"),ol=space(),is=element("li"),rs=element("span"),sl=text("Frankston"),el=space(),ds=element("li"),us=element("span"),Jc=text("Frankston North"),Xc=space(),fs=element("li"),ps=element("span"),Gc=text("Frankston South"),Kc=space(),bs=element("li"),js=element("span"),Uc=text("Langwarrin"),Vc=space(),ws=element("li"),Os=element("span"),Bc=text("Langwarrin South"),Pc=space(),Es=element("li"),ks=element("span"),Rc=text("Sandhurst"),Dc=space(),Ms=element("li"),Fs=element("span"),zc=text("Seaford and Skye"),Mc=space(),b=element("ul"),f=element("li"),P=element("button"),H=element("span"),Sc=text("Casey"),Ec=space(),I=element("p"),Cc=text("As fastest growing municipality in Victoria the city of Casey has one of the highest demands for fence construction. We have built many fences across the region and will be doing so for many years to come. There are numerous developments and housing estates across Clyde, the new Brompton, Lochhaven and Amstel estates around Cranbourne and the Arcadia estate in Botanic Ridge. Here you will find paling fences with exposed pointed posts and capping and various driveway and entrance gates. You will find Colorbond with exposed timber posts and capping in Botanic Ridge as well as numerous other Colorbond fence styles across the Casey region."),wc=space(),s=element("ul"),Ws=element("li"),Us=element("span"),_c=text("Berwick"),bc=space(),Ys=element("li"),Gs=element("span"),vc=text("Blind Bight"),fc=space(),Zs=element("li"),Js=element("span"),mc=text("Botanic Ridge"),dc=space(),no=element("li"),so=element("span"),lc=text("Cannons Creek"),ac=space(),ao=element("li"),ro=element("span"),ic=text("Clyde"),nc=space(),uo=element("li"),ho=element("span"),tc=text("Clyde North"),Zr=space(),po=element("li"),go=element("span"),Qr=text("Cranbourne"),Yr=space(),jo=element("li"),yo=element("span"),qr=text("Cranbourne East"),Wr=space(),Oo=element("li"),xo=element("span"),$r=text("Cranbourne North"),Ir=space(),ko=element("li"),Ao=element("span"),Hr=text("Cranbourne South"),Lr=space(),Fo=element("li"),To=element("span"),Nr=text("Cranbourne West"),Tr=space(),No=element("li"),Lo=element("span"),Fr=text("Devon Meadows"),Ar=space(),Ho=element("li"),Io=element("span"),kr=text("Doveton"),xr=space(),$o=element("li"),Wo=element("span"),Or=text("Endeavour Hills"),yr=space(),qo=element("li"),Yo=element("span"),jr=text("Eumemmerring"),gr=space(),Qo=element("li"),Zo=element("span"),pr=text("Hallam"),hr=space(),ti=element("li"),ni=element("span"),ur=text("Hampton Park"),cr=space(),ii=element("li"),ai=element("span"),rr=text("Harkaway"),or=space(),li=element("li"),di=element("span"),sr=text("Junction Village"),er=space(),mi=element("li"),fi=element("span"),Ja=text("Lynbrook"),Xa=space(),vi=element("li"),bi=element("span"),Ga=text("Lyndhurst (part)"),Ka=space(),_i=element("li"),wi=element("span"),Ua=text("Lysterfield South"),Va=space(),Ci=element("li"),Ei=element("span"),Ba=text("Narre Warren"),Pa=space(),Si=element("li"),Mi=element("span"),Ra=text("Narre Warren North"),Da=space(),zi=element("li"),Di=element("span"),za=text("Narre Warren South"),Ma=space(),Ri=element("li"),Pi=element("span"),Sa=text("Pearcedale (part)"),Ea=space(),Bi=element("li"),Vi=element("span"),Ca=text("Tooradin (part) and Warneet"),wa=space(),O=element("ul"),l=element("li"),B=element("button"),W=element("span"),_a=text("Cardinia"),ba=space(),G=element("p"),va=text("This is a rural and horticultural hinterland with farms, agriculture and product manufacturing and with a rapidly growing population. Cardinia Shire has many established and expanding housing estates across Pakenham, Officer, Tooradin, Koo Wee Rup and Lang Lang."),fa=space(),t=element("ul"),ta=element("li"),na=element("span"),ma=text("Avonsleigh"),da=space(),ia=element("li"),aa=element("span"),la=text("Bayles"),ca=space(),Sn=element("li"),oa=element("span"),ua=text("Beaconsfield (part)"),ha=space(),sa=element("li"),Ji=element("span"),pa=text("Beaconsfield Upper"),ga=space(),Zi=element("li"),Xi=element("span"),ja=text("Bunyip"),ya=space(),Gi=element("li"),Wi=element("span"),Oa=text("Bunyip North"),xa=space(),$i=element("li"),Ii=element("span"),ka=text("Caldermeade"),Aa=space(),Hi=element("li"),Li=element("span"),Fa=text("Cardinia"),Ta=space(),Ni=element("li"),Ti=element("span"),Na=text("Catani"),La=space(),Fi=element("li"),Ai=element("span"),Ha=text("Clematis"),Ia=space(),ki=element("li"),xi=element("span"),$a=text("Cockatoo"),Wa=space(),Oi=element("li"),yi=element("span"),qa=text("Cora Lynn"),Ya=space(),ji=element("li"),gi=element("span"),Qa=text("Dalmore"),Za=space(),pi=element("li"),hi=element("span"),tr=text("Dewhurst"),nr=space(),ui=element("li"),ci=element("span"),ir=text("Emerald (part)"),ar=space(),ri=element("li"),oi=element("span"),lr=text("Garfield"),dr=space(),si=element("li"),ei=element("span"),mr=text("Garfield North"),fr=space(),Jo=element("li"),Xo=element("span"),vr=text("Gembrook"),br=space(),Go=element("li"),Ko=element("span"),_r=text("Guys Hill"),wr=space(),Uo=element("li"),Vo=element("span"),Cr=text("Heath Hill (part)"),Er=space(),Bo=element("li"),Po=element("span"),Sr=text("Iona"),Mr=space(),Ro=element("li"),Do=element("span"),zr=text("Koo Wee Rup"),Dr=space(),zo=element("li"),Mo=element("span"),Rr=text("Koo Wee Rup North"),Pr=space(),So=element("li"),Eo=element("span"),Br=text("Lang Lang (part)"),Vr=space(),Co=element("li"),wo=element("span"),Ur=text("Lang Lang East"),Kr=space(),_o=element("li"),bo=element("span"),Gr=text("Longwarry (part)"),Xr=space(),vo=element("li"),fo=element("span"),Jr=text("Maryknoll"),ec=space(),mo=element("li"),lo=element("span"),sc=text("Menzies Creek (part)"),oc=space(),co=element("li"),io=element("span"),rc=text("Modella (part)"),cc=space(),oo=element("li"),to=element("span"),uc=text("Monomeith"),hc=space(),eo=element("li"),Qs=element("span"),pc=text("Mount Burnett"),gc=space(),Xs=element("li"),qs=element("span"),jc=text("Nangana"),yc=space(),Ks=element("li"),Vs=element("span"),Oc=text("Nar Nar Goon"),xc=space(),Bs=element("li"),Hs=element("span"),kc=text("Nar Nar Goon North"),Ac=space(),Ps=element("li"),zs=element("span"),Fc=text("Nyora (part)"),Tc=space(),Ts=element("li"),Ss=element("span"),Nc=text("Officer"),Lc=space(),As=element("li"),Cs=element("span"),Hc=text("Officer South"),Ic=space(),xs=element("li"),_s=element("span"),$c=text("Pakenham"),Wc=space(),ys=element("li"),vs=element("span"),qc=text("Pakenham South"),Yc=space(),gs=element("li"),ms=element("span"),Qc=text("Pakenham Upper"),Zc=space(),hs=element("li"),ue=element("span"),tl=text("Rythdale"),nl=space(),cs=element("li"),os=element("span"),il=text("Tonimbuk"),al=space(),ss=element("li"),Jn=element("span"),ll=text("Tooradin (part)"),dl=space(),Zn=element("li"),Xn=element("span"),ml=text("Tynong"),fl=space(),Gn=element("li"),Wn=element("span"),vl=text("Tynong North"),bl=space(),$n=element("li"),In=element("span"),_l=text("Vervale and Yannathan"),wl=space(),C=element("ul"),d=element("li"),ee=element("button"),te=element("span"),kl=text("Kingston"),Al=space(),ne=element("p"),Ml=text("A large area with many older homes needing fence replacement and repairs along with new builds and property sub divisions. Homes around the bayside of Kingston City can often demand the decorative or feature elements to its fences and gates. Decorative screens will also extra touch to the property. Properties. Industrial areas will have wire mesh security fencing and with many schools having steel and tubular fences."),Fl=space(),o=element("ul"),xn=element("li"),On=element("span"),Nl=text("Aspendale"),Ll=space(),yn=element("li"),jn=element("span"),Hl=text("Aspendale Gardens"),Il=space(),gn=element("li"),pn=element("span"),$l=text("Bonbeach"),Wl=space(),hn=element("li"),un=element("span"),ql=text("Braeside"),Yl=space(),cn=element("li"),rn=element("span"),Ql=text("Carrum"),Zl=space(),sn=element("li"),nn=element("span"),td=text("Chelsea"),nd=space(),Jt=element("li"),Zt=element("span"),id=text("Chelsea Heights"),ad=space(),Gt=element("li"),Yt=element("span"),ld=text("Cheltenham (part)"),dd=space(),Ut=element("li"),Wt=element("span"),md=text("Clarinda"),fd=space(),Bt=element("li"),It=element("span"),vd=text("Clayton South"),bd=space(),Rt=element("li"),Lt=element("span"),_d=text("Dingley Village"),wd=space(),zt=element("li"),Tt=element("span"),Cd=text("Edithvale "),Ed=space(),St=element("li"),At=element("span"),Sd=text("Heatherton Highett (part)"),Md=space(),Ct=element("li"),xt=element("span"),zd=text("Mentone"),Dd=space(),_t=element("li"),yt=element("span"),Rd=text("Moorabbin"),Pd=space(),vt=element("li"),gt=element("span"),Bd=text("Moorabbin Airport"),Vd=space(),mt=element("li"),ht=element("span"),Ud=text("Mordialloc"),Kd=space(),lt=element("li"),ct=element("span"),Gd=text("Oakleigh South (part)"),Xd=space(),it=element("li"),ot=element("span"),Jd=text("Parkdale"),eu=space(),tt=element("li"),et=element("span"),su=text("Patterson Lakes and Waterways"),ou=space(),F=element("ul"),h=element("li"),re=element("button"),ce=element("span"),lu=text("Bass Coast"),du=space(),le=element("p"),hu=text("This is an area with two main industries: tourism and agriculture. With one of the highest growth rates in Victoria during peak holiday periods the population can grow to over 60000 in this area where the beautiful coastline meets the hinterland. With upcoming developments in Grantville, Coronet Bay and Philip Island, we are seeing many new paling fences gates and other fence styles in these areas as well wired fencing across acreages."),mu=space(),i=element("ul"),He=element("li"),Pe=element("span"),vu=text("Bass"),bu=space(),Ne=element("li"),De=element("span"),_u=text("Coronet Bay"),wu=space(),Fe=element("li"),Me=element("span"),Cu=text("Cowes"),Eu=space(),ke=element("li"),Ee=element("span"),Su=text("Dalyston"),Mu=space(),Oe=element("li"),we=element("span"),zu=text("Grantville"),Du=space(),je=element("li"),be=element("span"),Ru=text("Inverloch"),Pu=space(),pe=element("li"),fe=element("span"),Bu=text("Jam Jerrup"),Vu=space(),ls=element("li"),Ve=element("span"),Uu=text("Lang Lang"),Ku=space(),qe=element("li"),Xe=element("span"),Gu=text("Loch"),Xu=space(),An=element("li"),Fn=element("span"),Ju=text("Newhaven"),e1=space(),Ln=element("li"),Hn=element("span"),s1=text("North Wonthaggi"),o1=space(),qn=element("li"),Yn=element("span"),r1=text("Pioneer Bay"),c1=space(),Qn=element("li"),es=element("span"),u1=text("Rhyll"),h1=space(),Ds=element("li"),Ns=element("span"),p1=text("San Remo"),g1=space(),Ls=element("li"),Rs=element("span"),j1=text("Silverleaves"),y1=space(),Is=element("li"),$s=element("span"),O1=text("Smiths Beach"),x1=space(),Ui=element("li"),Ki=element("span"),k1=text("The Gurdies"),A1=space(),qi=element("li"),Yi=element("span"),F1=text("Wonthaggi"),T1=space(),Qi=element("li"),ea=element("span"),N1=text("Woolamai"),L1=space(),D=element("ul"),g=element("li"),X=element("button"),R=element("span"),B1=text("Baw Baw"),V1=space(),Q=element("p"),W1=text("A predominantly rural area Baw Baw comprises of industry including horticulture, dairy farming and forestry. This area is seeing more urban growth particularly in the Drouin and Warragul areas, with new estates requiring fencing including paling and colorbond styles, driveway and entry gates"),U1=space(),S=element("ul"),v=element("li"),J=element("button"),oe=element("span"),X1=text("South Gippsland"),Q1=space(),ie=element("p"),J1=text("A widespread area of rural and farming land, South Gippsland has an array of retail trade, fishing hospitality and tourism. This region requires a mixture of all fences and gates including residential, farming, commercial along with public recreational areas."),this.h()},l(e){A=claim_element(e,"SECTION",{id:!0});var nf=children(A),b4,h4,J8,Y8,c8,p4,r4,o8,gm,hm,E3,w3,y2,g2,Z0,i4,Y0,f4,w4,P3,_4,t4,O4,x4,C4,E4,k4,A4,S4,M4,F4,T4,z4,D4,N4,L4,R4,P4,H4,I4,B4,V4,$4,W4,U4,K4,q4,Y4,G4,X4,Q4,Z4,J4,e0,t0,n0,s0,o0,i0,a0,r0,c0,l0,d0,u0,h0,m0,f0,p0,g0,v0,b0,j0,y0,_0,w0,O0,x0,C0,E0,k0,A0,S0,M0,F0,T0,z0,D0,N0,L0,R0,P0,H0,I0,B0,V0,$0,W0,U0,K0,q0,m4,G0,X0,Q0,a4,J0,e2,t2,n2,s2,o2,i2,a2,r2,c2,l2,d2,u2,h2,m2,f2,p2,u4,v2,b2,j2,n4,_2,w2,O2,x2,C2,E2,k2,A2,S2,M2,F2,T2,z2,D2,N2,L2,R2,P2,H2,I2,B2,V2,$2,W2,U2,K2,q2,Y2,G2,X2,Q2,Z2,J2,e3,t3,n3,s3,o3,i3,a3,r3,c3,l3,d3,u3,h3,m3,f3,p3,g3,R3,b3,j3,y3,_3,c4,O3,x3,C3,e4,k3,j4,S3,M3,F3,T3,z3,D3,N3,L3,v3,Kh,zm,I3,B3,V3,$3,W3,U3,K3,q3,Y3,G3,X3,Q3,Z3,J3,eh,th,nh,sh,oh,ih,ah,rh,ch,lh,dh,uh,hh,mh,fh,ph,gh,vh,bh,jh,yh,_h,wh,Oh,xh,Ch,Eh,kh,Ah,Sh,Mh,Fh,Th,zh,Dh,Nh,Lh,Rh,Ph,Hh,Ih,Bh,Vh,$h,Wh,Uh,y4,qh,Yh,Gh,Xh,Qh,Zh,Jh,em,tm,nm,sm,om,im,am,rm,cm,lm,dm,um,d4,mm,fm,pm,s4,vm,bm,jm,ym,_m,wm,Om,xm,Cm,Em,km,Am,Sm,Mm,Fm,Tm,H3,Dm,Nm,Lm,Rm,Pm,Hm,Im,Bm,Vm,$m,Wm,Um,Km,qm,Ym,Gm,Xm,Qm,Zm,Jm,e8,t8,n8,s8,l4,i8,a8,r8,o4,l8,d8,u8,h8,m8,f8,p8,g8,v8,b8,j8,y8,_8,w8,O8,x8,C8,E8,k8,A8,S8,M8,F8,T8,z8,D8,N8,L8,R8,P8,H8,I8,B8,V8,$8,W8,U8,K8,q8,g4,G8,X8,Q8,Z8,v4,ef,tf,A3;y=claim_element(nf,"DIV",{class:!0}),b4=children(y),m=claim_element(b4,"DIV",{class:!0}),h4=children(m),ae=claim_element(h4,"SPAN",{class:!0}),J8=children(ae),Z1=claim_text(J8,"Service Areas"),J8.forEach(detach),G1=claim_space(h4),se=claim_element(h4,"H2",{class:!0}),Y8=children(se),Y1=claim_text(Y8,"Areas We Service"),Y8.forEach(detach),q1=claim_space(h4),Z=claim_element(h4,"P",{class:!0}),c8=children(Z),K1=claim_text(c8,"Inspired Fencing offers services across the areas of the Mornington Peninsula, Frankston, Casey, Kingston, Bass Coast, Cardinia, Baw Baw and South Gippsland. Please see below for an overview and a detailed list of the suburbs and localities we cover."),c8.forEach(detach),h4.forEach(detach),$1=claim_space(b4),j=claim_element(b4,"DIV",{class:!0}),p4=children(j),c=claim_element(p4,"DIV",{class:!0}),r4=children(c),k=claim_element(r4,"BUTTON",{class:!0,"data-filter":!0}),o8=children(k),I1=claim_text(o8,"Mornington Peninsula"),o8.forEach(detach),H1=claim_space(r4),N=claim_element(r4,"BUTTON",{class:!0,"data-filter":!0}),gm=children(N),P1=claim_text(gm,"Frankston City"),gm.forEach(detach),R1=claim_space(r4),_=claim_element(r4,"BUTTON",{href:!0,class:!0,"data-filter":!0}),hm=children(_),D1=claim_text(hm,"Casey"),hm.forEach(detach),z1=claim_space(r4),x=claim_element(r4,"BUTTON",{class:!0,"data-filter":!0}),E3=children(x),M1=claim_text(E3,"Cardinia"),E3.forEach(detach),S1=claim_space(r4),w=claim_element(r4,"BUTTON",{class:!0,"data-filter":!0}),w3=children(w),E1=claim_text(w3,"Kingston"),w3.forEach(detach),C1=claim_space(r4),M=claim_element(r4,"BUTTON",{class:!0,"data-filter":!0}),y2=children(M),w1=claim_text(y2,"Bass Coast"),y2.forEach(detach),_1=claim_space(r4),z=claim_element(r4,"BUTTON",{class:!0,"data-filter":!0}),g2=children(z),b1=claim_text(g2,"Baw Baw"),g2.forEach(detach),v1=claim_space(r4),L=claim_element(r4,"BUTTON",{class:!0,"data-filter":!0}),Z0=children(L),f1=claim_text(Z0,"South Gippsland"),Z0.forEach(detach),r4.forEach(detach),m1=claim_space(p4),r=claim_element(p4,"DIV",{class:!0}),i4=children(r),T=claim_element(i4,"UL",{class:!0,"data-category":!0}),Y0=children(T),u=claim_element(Y0,"LI",{class:!0}),f4=children(u),V=claim_element(f4,"BUTTON",{class:!0}),w4=children(V),$=claim_element(w4,"SPAN",{class:!0}),P3=children($),d1=claim_text(P3,"Mornington Peninsula"),P3.forEach(detach),w4.forEach(detach),l1=claim_space(f4),K=claim_element(f4,"P",{class:!0}),_4=children(K),a1=claim_text(_4,"Comprising a mixture of urban areas, coastal resort towns, development and rural farm land, the Mornington Peninsula makes way for a wide range of fencing and gate styles. Paling, colorbond and feature front fences are most common in the urban areas but you will find many attractive brush styles particularly in the more beach and coastal regions."),_4.forEach(detach),i1=claim_space(f4),n=claim_element(f4,"UL",{class:!0}),t4=children(n),Kn=claim_element(t4,"LI",{}),O4=children(Kn),Un=claim_element(O4,"SPAN",{}),x4=children(Un),n1=claim_text(x4,"Arthurs Seat"),x4.forEach(detach),O4.forEach(detach),t1=claim_space(t4),Nn=claim_element(t4,"LI",{}),C4=children(Nn),Tn=claim_element(C4,"SPAN",{}),E4=children(Tn),Zu=claim_text(E4,"Balnarring"),E4.forEach(detach),C4.forEach(detach),Qu=claim_space(t4),kn=claim_element(t4,"LI",{}),k4=children(kn),Qe=claim_element(k4,"SPAN",{}),A4=children(Qe),Yu=claim_text(A4,"Balnarring Beach"),A4.forEach(detach),k4.forEach(detach),qu=claim_space(t4),Ke=claim_element(t4,"LI",{}),S4=children(Ke),$e=claim_element(S4,"SPAN",{}),M4=children($e),Wu=claim_text(M4,"Baxter"),M4.forEach(detach),S4.forEach(detach),$u=claim_space(t4),he=claim_element(t4,"LI",{}),F4=children(he),me=claim_element(F4,"SPAN",{}),T4=children(me),Iu=claim_text(T4,"Bittern"),T4.forEach(detach),F4.forEach(detach),Hu=claim_space(t4),ge=claim_element(t4,"LI",{}),z4=children(ge),ve=claim_element(z4,"SPAN",{}),D4=children(ve),Lu=claim_text(D4,"Blairgowrie"),D4.forEach(detach),z4.forEach(detach),Nu=claim_space(t4),ye=claim_element(t4,"LI",{}),N4=children(ye),_e=claim_element(N4,"SPAN",{}),L4=children(_e),Tu=claim_text(L4,"Boneo"),L4.forEach(detach),N4.forEach(detach),Fu=claim_space(t4),xe=claim_element(t4,"LI",{}),R4=children(xe),Ce=claim_element(R4,"SPAN",{}),P4=children(Ce),Au=claim_text(P4,"Cape Schanck"),P4.forEach(detach),R4.forEach(detach),ku=claim_space(t4),Ae=claim_element(t4,"LI",{}),H4=children(Ae),Se=claim_element(H4,"SPAN",{}),I4=children(Se),xu=claim_text(I4,"Capel Sound"),I4.forEach(detach),H4.forEach(detach),Ou=claim_space(t4),Te=claim_element(t4,"LI",{}),B4=children(Te),ze=claim_element(B4,"SPAN",{}),V4=children(ze),yu=claim_text(V4,"Crib Point"),V4.forEach(detach),B4.forEach(detach),ju=claim_space(t4),Le=claim_element(t4,"LI",{}),$4=children(Le),Re=claim_element($4,"SPAN",{}),W4=children(Re),gu=claim_text(W4,"Dromana"),W4.forEach(detach),$4.forEach(detach),pu=claim_space(t4),Ie=claim_element(t4,"LI",{}),U4=children(Ie),Be=claim_element(U4,"SPAN",{}),K4=children(Be),fu=claim_text(K4,"Fingal"),K4.forEach(detach),U4.forEach(detach),uu=claim_space(t4),We=claim_element(t4,"LI",{}),q4=children(We),Ue=claim_element(q4,"SPAN",{}),Y4=children(Ue),cu=claim_text(Y4,"Flinders"),Y4.forEach(detach),q4.forEach(detach),ru=claim_space(t4),Ye=claim_element(t4,"LI",{}),G4=children(Ye),Ge=claim_element(G4,"SPAN",{}),X4=children(Ge),au=claim_text(X4,"Hastings"),X4.forEach(detach),G4.forEach(detach),iu=claim_space(t4),Ze=claim_element(t4,"LI",{}),Q4=children(Ze),Je=claim_element(Q4,"SPAN",{}),Z4=children(Je),nu=claim_text(Z4,"HMAS Cerberus"),Z4.forEach(detach),Q4.forEach(detach),tu=claim_space(t4),nt=claim_element(t4,"LI",{}),J4=children(nt),st=claim_element(J4,"SPAN",{}),e0=children(st),Zd=claim_text(e0,"Main Ridge"),e0.forEach(detach),J4.forEach(detach),Qd=claim_space(t4),at=claim_element(t4,"LI",{}),t0=children(at),rt=claim_element(t0,"SPAN",{}),n0=children(rt),Yd=claim_text(n0,"McCrae"),n0.forEach(detach),t0.forEach(detach),qd=claim_space(t4),dt=claim_element(t4,"LI",{}),s0=children(dt),ut=claim_element(s0,"SPAN",{}),o0=children(ut),Wd=claim_text(o0,"Merricks"),o0.forEach(detach),s0.forEach(detach),$d=claim_space(t4),ft=claim_element(t4,"LI",{}),i0=children(ft),pt=claim_element(i0,"SPAN",{}),a0=children(pt),Id=claim_text(a0,"Merricks Beach"),a0.forEach(detach),i0.forEach(detach),Hd=claim_space(t4),bt=claim_element(t4,"LI",{}),r0=children(bt),jt=claim_element(r0,"SPAN",{}),c0=children(jt),Ld=claim_text(c0,"Merricks North"),c0.forEach(detach),r0.forEach(detach),Nd=claim_space(t4),wt=claim_element(t4,"LI",{}),l0=children(wt),Ot=claim_element(l0,"SPAN",{}),d0=children(Ot),Td=claim_text(d0,"Moorooduc"),d0.forEach(detach),l0.forEach(detach),Fd=claim_space(t4),Et=claim_element(t4,"LI",{}),u0=children(Et),kt=claim_element(u0,"SPAN",{}),h0=children(kt),Ad=claim_text(h0,"Mornington"),h0.forEach(detach),u0.forEach(detach),kd=claim_space(t4),Mt=claim_element(t4,"LI",{}),m0=children(Mt),Ft=claim_element(m0,"SPAN",{}),f0=children(Ft),xd=claim_text(f0,"Mount Eliza"),f0.forEach(detach),m0.forEach(detach),Od=claim_space(t4),Dt=claim_element(t4,"LI",{}),p0=children(Dt),Nt=claim_element(p0,"SPAN",{}),g0=children(Nt),yd=claim_text(g0,"Mount Martha"),g0.forEach(detach),p0.forEach(detach),jd=claim_space(t4),Pt=claim_element(t4,"LI",{}),v0=children(Pt),Ht=claim_element(v0,"SPAN",{}),b0=children(Ht),gd=claim_text(b0,"Pearcedale (part)"),b0.forEach(detach),v0.forEach(detach),pd=claim_space(t4),Vt=claim_element(t4,"LI",{}),j0=children(Vt),$t=claim_element(j0,"SPAN",{}),y0=children($t),hd=claim_text(y0,"Point Leo"),y0.forEach(detach),j0.forEach(detach),ud=claim_space(t4),Kt=claim_element(t4,"LI",{}),_0=children(Kt),qt=claim_element(_0,"SPAN",{}),w0=children(qt),cd=claim_text(w0,"Portsea"),w0.forEach(detach),_0.forEach(detach),rd=claim_space(t4),Xt=claim_element(t4,"LI",{}),O0=children(Xt),Qt=claim_element(O0,"SPAN",{}),x0=children(Qt),od=claim_text(x0,"Red Hill"),x0.forEach(detach),O0.forEach(detach),sd=claim_space(t4),en=claim_element(t4,"LI",{}),C0=children(en),tn=claim_element(C0,"SPAN",{}),E0=children(tn),ed=claim_text(E0,"Red Hill South"),E0.forEach(detach),C0.forEach(detach),Jl=claim_space(t4),on=claim_element(t4,"LI",{}),k0=children(on),an=claim_element(k0,"SPAN",{}),A0=children(an),Xl=claim_text(A0,"Rosebud"),A0.forEach(detach),k0.forEach(detach),Gl=claim_space(t4),ln=claim_element(t4,"LI",{}),S0=children(ln),dn=claim_element(S0,"SPAN",{}),M0=children(dn),Kl=claim_text(M0,"Rye"),M0.forEach(detach),S0.forEach(detach),Ul=claim_space(t4),mn=claim_element(t4,"LI",{}),F0=children(mn),fn=claim_element(F0,"SPAN",{}),T0=children(fn),Vl=claim_text(T0,"Safety Beach"),T0.forEach(detach),F0.forEach(detach),Bl=claim_space(t4),vn=claim_element(t4,"LI",{}),z0=children(vn),bn=claim_element(z0,"SPAN",{}),D0=children(bn),Pl=claim_text(D0,"Shoreham"),D0.forEach(detach),z0.forEach(detach),Rl=claim_space(t4),_n=claim_element(t4,"LI",{}),N0=children(_n),wn=claim_element(N0,"SPAN",{}),L0=children(wn),Dl=claim_text(L0,"Somers"),L0.forEach(detach),N0.forEach(detach),zl=claim_space(t4),Cn=claim_element(t4,"LI",{}),R0=children(Cn),En=claim_element(R0,"SPAN",{}),P0=children(En),ra=claim_text(P0,"Somerville"),P0.forEach(detach),R0.forEach(detach),Tl=claim_space(t4),de=claim_element(t4,"LI",{}),H0=children(de),Mn=claim_element(H0,"SPAN",{}),I0=children(Mn),Sl=claim_text(I0,"Sorrento"),I0.forEach(detach),H0.forEach(detach),El=claim_space(t4),zn=claim_element(t4,"LI",{}),B0=children(zn),Dn=claim_element(B0,"SPAN",{}),V0=children(Dn),Cl=claim_text(V0,"St Andrews Beach"),V0.forEach(detach),B0.forEach(detach),xl=claim_space(t4),Rn=claim_element(t4,"LI",{}),$0=children(Rn),Pn=claim_element($0,"SPAN",{}),W0=children(Pn),Ol=claim_text(W0,"Tootgarook"),W0.forEach(detach),$0.forEach(detach),yl=claim_space(t4),Bn=claim_element(t4,"LI",{}),U0=children(Bn),Vn=claim_element(U0,"SPAN",{}),K0=children(Vn),jl=claim_text(K0,"Tuerong and Tyabb"),K0.forEach(detach),U0.forEach(detach),t4.forEach(detach),f4.forEach(detach),Y0.forEach(detach),gl=claim_space(i4),E=claim_element(i4,"UL",{class:!0,"data-category":!0}),q0=children(E),p=claim_element(q0,"LI",{class:!0}),m4=children(p),Y=claim_element(m4,"BUTTON",{class:!0}),G0=children(Y),q=claim_element(G0,"SPAN",{class:!0}),X0=children(q),pl=claim_text(X0,"Frankston City"),X0.forEach(detach),G0.forEach(detach),hl=claim_space(m4),U=claim_element(m4,"P",{class:!0}),Q0=children(U),ul=claim_text(Q0,"The district has many major industry sectors including construction, manufacturing, retail, property and personal business services. Many fences and fencing solutions are required across the City of Frankston. With older homes and building requiring maintenance as well as multiple property developments across different areas new construction and maintenance is always needed."),Q0.forEach(detach),cl=claim_space(m4),a=claim_element(m4,"UL",{class:!0}),a4=children(a),ts=claim_element(a4,"LI",{}),J0=children(ts),ns=claim_element(J0,"SPAN",{}),e2=children(ns),rl=claim_text(e2,"Carrum Downs"),e2.forEach(detach),J0.forEach(detach),ol=claim_space(a4),is=claim_element(a4,"LI",{}),t2=children(is),rs=claim_element(t2,"SPAN",{}),n2=children(rs),sl=claim_text(n2,"Frankston"),n2.forEach(detach),t2.forEach(detach),el=claim_space(a4),ds=claim_element(a4,"LI",{}),s2=children(ds),us=claim_element(s2,"SPAN",{}),o2=children(us),Jc=claim_text(o2,"Frankston North"),o2.forEach(detach),s2.forEach(detach),Xc=claim_space(a4),fs=claim_element(a4,"LI",{}),i2=children(fs),ps=claim_element(i2,"SPAN",{}),a2=children(ps),Gc=claim_text(a2,"Frankston South"),a2.forEach(detach),i2.forEach(detach),Kc=claim_space(a4),bs=claim_element(a4,"LI",{}),r2=children(bs),js=claim_element(r2,"SPAN",{}),c2=children(js),Uc=claim_text(c2,"Langwarrin"),c2.forEach(detach),r2.forEach(detach),Vc=claim_space(a4),ws=claim_element(a4,"LI",{}),l2=children(ws),Os=claim_element(l2,"SPAN",{}),d2=children(Os),Bc=claim_text(d2,"Langwarrin South"),d2.forEach(detach),l2.forEach(detach),Pc=claim_space(a4),Es=claim_element(a4,"LI",{}),u2=children(Es),ks=claim_element(u2,"SPAN",{}),h2=children(ks),Rc=claim_text(h2,"Sandhurst"),h2.forEach(detach),u2.forEach(detach),Dc=claim_space(a4),Ms=claim_element(a4,"LI",{}),m2=children(Ms),Fs=claim_element(m2,"SPAN",{}),f2=children(Fs),zc=claim_text(f2,"Seaford and Skye"),f2.forEach(detach),m2.forEach(detach),a4.forEach(detach),m4.forEach(detach),q0.forEach(detach),Mc=claim_space(i4),b=claim_element(i4,"UL",{id:!0,class:!0,"data-category":!0}),p2=children(b),f=claim_element(p2,"LI",{class:!0}),u4=children(f),P=claim_element(u4,"BUTTON",{class:!0}),v2=children(P),H=claim_element(v2,"SPAN",{class:!0}),b2=children(H),Sc=claim_text(b2,"Casey"),b2.forEach(detach),v2.forEach(detach),Ec=claim_space(u4),I=claim_element(u4,"P",{class:!0}),j2=children(I),Cc=claim_text(j2,"As fastest growing municipality in Victoria the city of Casey has one of the highest demands for fence construction. We have built many fences across the region and will be doing so for many years to come. There are numerous developments and housing estates across Clyde, the new Brompton, Lochhaven and Amstel estates around Cranbourne and the Arcadia estate in Botanic Ridge. Here you will find paling fences with exposed pointed posts and capping and various driveway and entrance gates. You will find Colorbond with exposed timber posts and capping in Botanic Ridge as well as numerous other Colorbond fence styles across the Casey region."),j2.forEach(detach),wc=claim_space(u4),s=claim_element(u4,"UL",{class:!0}),n4=children(s),Ws=claim_element(n4,"LI",{}),_2=children(Ws),Us=claim_element(_2,"SPAN",{}),w2=children(Us),_c=claim_text(w2,"Berwick"),w2.forEach(detach),_2.forEach(detach),bc=claim_space(n4),Ys=claim_element(n4,"LI",{}),O2=children(Ys),Gs=claim_element(O2,"SPAN",{}),x2=children(Gs),vc=claim_text(x2,"Blind Bight"),x2.forEach(detach),O2.forEach(detach),fc=claim_space(n4),Zs=claim_element(n4,"LI",{}),C2=children(Zs),Js=claim_element(C2,"SPAN",{}),E2=children(Js),mc=claim_text(E2,"Botanic Ridge"),E2.forEach(detach),C2.forEach(detach),dc=claim_space(n4),no=claim_element(n4,"LI",{}),k2=children(no),so=claim_element(k2,"SPAN",{}),A2=children(so),lc=claim_text(A2,"Cannons Creek"),A2.forEach(detach),k2.forEach(detach),ac=claim_space(n4),ao=claim_element(n4,"LI",{}),S2=children(ao),ro=claim_element(S2,"SPAN",{}),M2=children(ro),ic=claim_text(M2,"Clyde"),M2.forEach(detach),S2.forEach(detach),nc=claim_space(n4),uo=claim_element(n4,"LI",{}),F2=children(uo),ho=claim_element(F2,"SPAN",{}),T2=children(ho),tc=claim_text(T2,"Clyde North"),T2.forEach(detach),F2.forEach(detach),Zr=claim_space(n4),po=claim_element(n4,"LI",{}),z2=children(po),go=claim_element(z2,"SPAN",{}),D2=children(go),Qr=claim_text(D2,"Cranbourne"),D2.forEach(detach),z2.forEach(detach),Yr=claim_space(n4),jo=claim_element(n4,"LI",{}),N2=children(jo),yo=claim_element(N2,"SPAN",{}),L2=children(yo),qr=claim_text(L2,"Cranbourne East"),L2.forEach(detach),N2.forEach(detach),Wr=claim_space(n4),Oo=claim_element(n4,"LI",{}),R2=children(Oo),xo=claim_element(R2,"SPAN",{}),P2=children(xo),$r=claim_text(P2,"Cranbourne North"),P2.forEach(detach),R2.forEach(detach),Ir=claim_space(n4),ko=claim_element(n4,"LI",{}),H2=children(ko),Ao=claim_element(H2,"SPAN",{}),I2=children(Ao),Hr=claim_text(I2,"Cranbourne South"),I2.forEach(detach),H2.forEach(detach),Lr=claim_space(n4),Fo=claim_element(n4,"LI",{}),B2=children(Fo),To=claim_element(B2,"SPAN",{}),V2=children(To),Nr=claim_text(V2,"Cranbourne West"),V2.forEach(detach),B2.forEach(detach),Tr=claim_space(n4),No=claim_element(n4,"LI",{}),$2=children(No),Lo=claim_element($2,"SPAN",{}),W2=children(Lo),Fr=claim_text(W2,"Devon Meadows"),W2.forEach(detach),$2.forEach(detach),Ar=claim_space(n4),Ho=claim_element(n4,"LI",{}),U2=children(Ho),Io=claim_element(U2,"SPAN",{}),K2=children(Io),kr=claim_text(K2,"Doveton"),K2.forEach(detach),U2.forEach(detach),xr=claim_space(n4),$o=claim_element(n4,"LI",{}),q2=children($o),Wo=claim_element(q2,"SPAN",{}),Y2=children(Wo),Or=claim_text(Y2,"Endeavour Hills"),Y2.forEach(detach),q2.forEach(detach),yr=claim_space(n4),qo=claim_element(n4,"LI",{}),G2=children(qo),Yo=claim_element(G2,"SPAN",{}),X2=children(Yo),jr=claim_text(X2,"Eumemmerring"),X2.forEach(detach),G2.forEach(detach),gr=claim_space(n4),Qo=claim_element(n4,"LI",{}),Q2=children(Qo),Zo=claim_element(Q2,"SPAN",{}),Z2=children(Zo),pr=claim_text(Z2,"Hallam"),Z2.forEach(detach),Q2.forEach(detach),hr=claim_space(n4),ti=claim_element(n4,"LI",{}),J2=children(ti),ni=claim_element(J2,"SPAN",{}),e3=children(ni),ur=claim_text(e3,"Hampton Park"),e3.forEach(detach),J2.forEach(detach),cr=claim_space(n4),ii=claim_element(n4,"LI",{}),t3=children(ii),ai=claim_element(t3,"SPAN",{}),n3=children(ai),rr=claim_text(n3,"Harkaway"),n3.forEach(detach),t3.forEach(detach),or=claim_space(n4),li=claim_element(n4,"LI",{}),s3=children(li),di=claim_element(s3,"SPAN",{}),o3=children(di),sr=claim_text(o3,"Junction Village"),o3.forEach(detach),s3.forEach(detach),er=claim_space(n4),mi=claim_element(n4,"LI",{}),i3=children(mi),fi=claim_element(i3,"SPAN",{}),a3=children(fi),Ja=claim_text(a3,"Lynbrook"),a3.forEach(detach),i3.forEach(detach),Xa=claim_space(n4),vi=claim_element(n4,"LI",{}),r3=children(vi),bi=claim_element(r3,"SPAN",{}),c3=children(bi),Ga=claim_text(c3,"Lyndhurst (part)"),c3.forEach(detach),r3.forEach(detach),Ka=claim_space(n4),_i=claim_element(n4,"LI",{}),l3=children(_i),wi=claim_element(l3,"SPAN",{}),d3=children(wi),Ua=claim_text(d3,"Lysterfield South"),d3.forEach(detach),l3.forEach(detach),Va=claim_space(n4),Ci=claim_element(n4,"LI",{}),u3=children(Ci),Ei=claim_element(u3,"SPAN",{}),h3=children(Ei),Ba=claim_text(h3,"Narre Warren"),h3.forEach(detach),u3.forEach(detach),Pa=claim_space(n4),Si=claim_element(n4,"LI",{}),m3=children(Si),Mi=claim_element(m3,"SPAN",{}),f3=children(Mi),Ra=claim_text(f3,"Narre Warren North"),f3.forEach(detach),m3.forEach(detach),Da=claim_space(n4),zi=claim_element(n4,"LI",{}),p3=children(zi),Di=claim_element(p3,"SPAN",{}),g3=children(Di),za=claim_text(g3,"Narre Warren South"),g3.forEach(detach),p3.forEach(detach),Ma=claim_space(n4),Ri=claim_element(n4,"LI",{}),R3=children(Ri),Pi=claim_element(R3,"SPAN",{}),b3=children(Pi),Sa=claim_text(b3,"Pearcedale (part)"),b3.forEach(detach),R3.forEach(detach),Ea=claim_space(n4),Bi=claim_element(n4,"LI",{}),j3=children(Bi),Vi=claim_element(j3,"SPAN",{}),y3=children(Vi),Ca=claim_text(y3,"Tooradin (part) and Warneet"),y3.forEach(detach),j3.forEach(detach),n4.forEach(detach),u4.forEach(detach),p2.forEach(detach),wa=claim_space(i4),O=claim_element(i4,"UL",{class:!0,"data-category":!0}),_3=children(O),l=claim_element(_3,"LI",{class:!0}),c4=children(l),B=claim_element(c4,"BUTTON",{class:!0}),O3=children(B),W=claim_element(O3,"SPAN",{class:!0}),x3=children(W),_a=claim_text(x3,"Cardinia"),x3.forEach(detach),O3.forEach(detach),ba=claim_space(c4),G=claim_element(c4,"P",{class:!0}),C3=children(G),va=claim_text(C3,"This is a rural and horticultural hinterland with farms, agriculture and product manufacturing and with a rapidly growing population. Cardinia Shire has many established and expanding housing estates across Pakenham, Officer, Tooradin, Koo Wee Rup and Lang Lang."),C3.forEach(detach),fa=claim_space(c4),t=claim_element(c4,"UL",{class:!0}),e4=children(t),ta=claim_element(e4,"LI",{}),k3=children(ta),na=claim_element(k3,"SPAN",{}),j4=children(na),ma=claim_text(j4,"Avonsleigh"),j4.forEach(detach),k3.forEach(detach),da=claim_space(e4),ia=claim_element(e4,"LI",{}),S3=children(ia),aa=claim_element(S3,"SPAN",{}),M3=children(aa),la=claim_text(M3,"Bayles"),M3.forEach(detach),S3.forEach(detach),ca=claim_space(e4),Sn=claim_element(e4,"LI",{}),F3=children(Sn),oa=claim_element(F3,"SPAN",{}),T3=children(oa),ua=claim_text(T3,"Beaconsfield (part)"),T3.forEach(detach),F3.forEach(detach),ha=claim_space(e4),sa=claim_element(e4,"LI",{}),z3=children(sa),Ji=claim_element(z3,"SPAN",{}),D3=children(Ji),pa=claim_text(D3,"Beaconsfield Upper"),D3.forEach(detach),z3.forEach(detach),ga=claim_space(e4),Zi=claim_element(e4,"LI",{}),N3=children(Zi),Xi=claim_element(N3,"SPAN",{}),L3=children(Xi),ja=claim_text(L3,"Bunyip"),L3.forEach(detach),N3.forEach(detach),ya=claim_space(e4),Gi=claim_element(e4,"LI",{}),v3=children(Gi),Wi=claim_element(v3,"SPAN",{}),Kh=children(Wi),Oa=claim_text(Kh,"Bunyip North"),Kh.forEach(detach),v3.forEach(detach),xa=claim_space(e4),$i=claim_element(e4,"LI",{}),zm=children($i),Ii=claim_element(zm,"SPAN",{}),I3=children(Ii),ka=claim_text(I3,"Caldermeade"),I3.forEach(detach),zm.forEach(detach),Aa=claim_space(e4),Hi=claim_element(e4,"LI",{}),B3=children(Hi),Li=claim_element(B3,"SPAN",{}),V3=children(Li),Fa=claim_text(V3,"Cardinia"),V3.forEach(detach),B3.forEach(detach),Ta=claim_space(e4),Ni=claim_element(e4,"LI",{}),$3=children(Ni),Ti=claim_element($3,"SPAN",{}),W3=children(Ti),Na=claim_text(W3,"Catani"),W3.forEach(detach),$3.forEach(detach),La=claim_space(e4),Fi=claim_element(e4,"LI",{}),U3=children(Fi),Ai=claim_element(U3,"SPAN",{}),K3=children(Ai),Ha=claim_text(K3,"Clematis"),K3.forEach(detach),U3.forEach(detach),Ia=claim_space(e4),ki=claim_element(e4,"LI",{}),q3=children(ki),xi=claim_element(q3,"SPAN",{}),Y3=children(xi),$a=claim_text(Y3,"Cockatoo"),Y3.forEach(detach),q3.forEach(detach),Wa=claim_space(e4),Oi=claim_element(e4,"LI",{}),G3=children(Oi),yi=claim_element(G3,"SPAN",{}),X3=children(yi),qa=claim_text(X3,"Cora Lynn"),X3.forEach(detach),G3.forEach(detach),Ya=claim_space(e4),ji=claim_element(e4,"LI",{}),Q3=children(ji),gi=claim_element(Q3,"SPAN",{}),Z3=children(gi),Qa=claim_text(Z3,"Dalmore"),Z3.forEach(detach),Q3.forEach(detach),Za=claim_space(e4),pi=claim_element(e4,"LI",{}),J3=children(pi),hi=claim_element(J3,"SPAN",{}),eh=children(hi),tr=claim_text(eh,"Dewhurst"),eh.forEach(detach),J3.forEach(detach),nr=claim_space(e4),ui=claim_element(e4,"LI",{}),th=children(ui),ci=claim_element(th,"SPAN",{}),nh=children(ci),ir=claim_text(nh,"Emerald (part)"),nh.forEach(detach),th.forEach(detach),ar=claim_space(e4),ri=claim_element(e4,"LI",{}),sh=children(ri),oi=claim_element(sh,"SPAN",{}),oh=children(oi),lr=claim_text(oh,"Garfield"),oh.forEach(detach),sh.forEach(detach),dr=claim_space(e4),si=claim_element(e4,"LI",{}),ih=children(si),ei=claim_element(ih,"SPAN",{}),ah=children(ei),mr=claim_text(ah,"Garfield North"),ah.forEach(detach),ih.forEach(detach),fr=claim_space(e4),Jo=claim_element(e4,"LI",{}),rh=children(Jo),Xo=claim_element(rh,"SPAN",{}),ch=children(Xo),vr=claim_text(ch,"Gembrook"),ch.forEach(detach),rh.forEach(detach),br=claim_space(e4),Go=claim_element(e4,"LI",{}),lh=children(Go),Ko=claim_element(lh,"SPAN",{}),dh=children(Ko),_r=claim_text(dh,"Guys Hill"),dh.forEach(detach),lh.forEach(detach),wr=claim_space(e4),Uo=claim_element(e4,"LI",{}),uh=children(Uo),Vo=claim_element(uh,"SPAN",{}),hh=children(Vo),Cr=claim_text(hh,"Heath Hill (part)"),hh.forEach(detach),uh.forEach(detach),Er=claim_space(e4),Bo=claim_element(e4,"LI",{}),mh=children(Bo),Po=claim_element(mh,"SPAN",{}),fh=children(Po),Sr=claim_text(fh,"Iona"),fh.forEach(detach),mh.forEach(detach),Mr=claim_space(e4),Ro=claim_element(e4,"LI",{}),ph=children(Ro),Do=claim_element(ph,"SPAN",{}),gh=children(Do),zr=claim_text(gh,"Koo Wee Rup"),gh.forEach(detach),ph.forEach(detach),Dr=claim_space(e4),zo=claim_element(e4,"LI",{}),vh=children(zo),Mo=claim_element(vh,"SPAN",{}),bh=children(Mo),Rr=claim_text(bh,"Koo Wee Rup North"),bh.forEach(detach),vh.forEach(detach),Pr=claim_space(e4),So=claim_element(e4,"LI",{}),jh=children(So),Eo=claim_element(jh,"SPAN",{}),yh=children(Eo),Br=claim_text(yh,"Lang Lang (part)"),yh.forEach(detach),jh.forEach(detach),Vr=claim_space(e4),Co=claim_element(e4,"LI",{}),_h=children(Co),wo=claim_element(_h,"SPAN",{}),wh=children(wo),Ur=claim_text(wh,"Lang Lang East"),wh.forEach(detach),_h.forEach(detach),Kr=claim_space(e4),_o=claim_element(e4,"LI",{}),Oh=children(_o),bo=claim_element(Oh,"SPAN",{}),xh=children(bo),Gr=claim_text(xh,"Longwarry (part)"),xh.forEach(detach),Oh.forEach(detach),Xr=claim_space(e4),vo=claim_element(e4,"LI",{}),Ch=children(vo),fo=claim_element(Ch,"SPAN",{}),Eh=children(fo),Jr=claim_text(Eh,"Maryknoll"),Eh.forEach(detach),Ch.forEach(detach),ec=claim_space(e4),mo=claim_element(e4,"LI",{}),kh=children(mo),lo=claim_element(kh,"SPAN",{}),Ah=children(lo),sc=claim_text(Ah,"Menzies Creek (part)"),Ah.forEach(detach),kh.forEach(detach),oc=claim_space(e4),co=claim_element(e4,"LI",{}),Sh=children(co),io=claim_element(Sh,"SPAN",{}),Mh=children(io),rc=claim_text(Mh,"Modella (part)"),Mh.forEach(detach),Sh.forEach(detach),cc=claim_space(e4),oo=claim_element(e4,"LI",{}),Fh=children(oo),to=claim_element(Fh,"SPAN",{}),Th=children(to),uc=claim_text(Th,"Monomeith"),Th.forEach(detach),Fh.forEach(detach),hc=claim_space(e4),eo=claim_element(e4,"LI",{}),zh=children(eo),Qs=claim_element(zh,"SPAN",{}),Dh=children(Qs),pc=claim_text(Dh,"Mount Burnett"),Dh.forEach(detach),zh.forEach(detach),gc=claim_space(e4),Xs=claim_element(e4,"LI",{}),Nh=children(Xs),qs=claim_element(Nh,"SPAN",{}),Lh=children(qs),jc=claim_text(Lh,"Nangana"),Lh.forEach(detach),Nh.forEach(detach),yc=claim_space(e4),Ks=claim_element(e4,"LI",{}),Rh=children(Ks),Vs=claim_element(Rh,"SPAN",{}),Ph=children(Vs),Oc=claim_text(Ph,"Nar Nar Goon"),Ph.forEach(detach),Rh.forEach(detach),xc=claim_space(e4),Bs=claim_element(e4,"LI",{}),Hh=children(Bs),Hs=claim_element(Hh,"SPAN",{}),Ih=children(Hs),kc=claim_text(Ih,"Nar Nar Goon North"),Ih.forEach(detach),Hh.forEach(detach),Ac=claim_space(e4),Ps=claim_element(e4,"LI",{}),Bh=children(Ps),zs=claim_element(Bh,"SPAN",{}),Vh=children(zs),Fc=claim_text(Vh,"Nyora (part)"),Vh.forEach(detach),Bh.forEach(detach),Tc=claim_space(e4),Ts=claim_element(e4,"LI",{}),$h=children(Ts),Ss=claim_element($h,"SPAN",{}),Wh=children(Ss),Nc=claim_text(Wh,"Officer"),Wh.forEach(detach),$h.forEach(detach),Lc=claim_space(e4),As=claim_element(e4,"LI",{}),Uh=children(As),Cs=claim_element(Uh,"SPAN",{}),y4=children(Cs),Hc=claim_text(y4,"Officer South"),y4.forEach(detach),Uh.forEach(detach),Ic=claim_space(e4),xs=claim_element(e4,"LI",{}),qh=children(xs),_s=claim_element(qh,"SPAN",{}),Yh=children(_s),$c=claim_text(Yh,"Pakenham"),Yh.forEach(detach),qh.forEach(detach),Wc=claim_space(e4),ys=claim_element(e4,"LI",{}),Gh=children(ys),vs=claim_element(Gh,"SPAN",{}),Xh=children(vs),qc=claim_text(Xh,"Pakenham South"),Xh.forEach(detach),Gh.forEach(detach),Yc=claim_space(e4),gs=claim_element(e4,"LI",{}),Qh=children(gs),ms=claim_element(Qh,"SPAN",{}),Zh=children(ms),Qc=claim_text(Zh,"Pakenham Upper"),Zh.forEach(detach),Qh.forEach(detach),Zc=claim_space(e4),hs=claim_element(e4,"LI",{}),Jh=children(hs),ue=claim_element(Jh,"SPAN",{}),em=children(ue),tl=claim_text(em,"Rythdale"),em.forEach(detach),Jh.forEach(detach),nl=claim_space(e4),cs=claim_element(e4,"LI",{}),tm=children(cs),os=claim_element(tm,"SPAN",{}),nm=children(os),il=claim_text(nm,"Tonimbuk"),nm.forEach(detach),tm.forEach(detach),al=claim_space(e4),ss=claim_element(e4,"LI",{}),sm=children(ss),Jn=claim_element(sm,"SPAN",{}),om=children(Jn),ll=claim_text(om,"Tooradin (part)"),om.forEach(detach),sm.forEach(detach),dl=claim_space(e4),Zn=claim_element(e4,"LI",{}),im=children(Zn),Xn=claim_element(im,"SPAN",{}),am=children(Xn),ml=claim_text(am,"Tynong"),am.forEach(detach),im.forEach(detach),fl=claim_space(e4),Gn=claim_element(e4,"LI",{}),rm=children(Gn),Wn=claim_element(rm,"SPAN",{}),cm=children(Wn),vl=claim_text(cm,"Tynong North"),cm.forEach(detach),rm.forEach(detach),bl=claim_space(e4),$n=claim_element(e4,"LI",{}),lm=children($n),In=claim_element(lm,"SPAN",{}),dm=children(In),_l=claim_text(dm,"Vervale and Yannathan"),dm.forEach(detach),lm.forEach(detach),e4.forEach(detach),c4.forEach(detach),_3.forEach(detach),wl=claim_space(i4),C=claim_element(i4,"UL",{class:!0,"data-category":!0}),um=children(C),d=claim_element(um,"LI",{class:!0}),d4=children(d),ee=claim_element(d4,"BUTTON",{class:!0}),mm=children(ee),te=claim_element(mm,"SPAN",{class:!0}),fm=children(te),kl=claim_text(fm,"Kingston"),fm.forEach(detach),mm.forEach(detach),Al=claim_space(d4),ne=claim_element(d4,"P",{class:!0}),pm=children(ne),Ml=claim_text(pm,"A large area with many older homes needing fence replacement and repairs along with new builds and property sub divisions. Homes around the bayside of Kingston City can often demand the decorative or feature elements to its fences and gates. Decorative screens will also extra touch to the property. Properties. Industrial areas will have wire mesh security fencing and with many schools having steel and tubular fences."),pm.forEach(detach),Fl=claim_space(d4),o=claim_element(d4,"UL",{class:!0}),s4=children(o),xn=claim_element(s4,"LI",{}),vm=children(xn),On=claim_element(vm,"SPAN",{}),bm=children(On),Nl=claim_text(bm,"Aspendale"),bm.forEach(detach),vm.forEach(detach),Ll=claim_space(s4),yn=claim_element(s4,"LI",{}),jm=children(yn),jn=claim_element(jm,"SPAN",{}),ym=children(jn),Hl=claim_text(ym,"Aspendale Gardens"),ym.forEach(detach),jm.forEach(detach),Il=claim_space(s4),gn=claim_element(s4,"LI",{}),_m=children(gn),pn=claim_element(_m,"SPAN",{}),wm=children(pn),$l=claim_text(wm,"Bonbeach"),wm.forEach(detach),_m.forEach(detach),Wl=claim_space(s4),hn=claim_element(s4,"LI",{}),Om=children(hn),un=claim_element(Om,"SPAN",{}),xm=children(un),ql=claim_text(xm,"Braeside"),xm.forEach(detach),Om.forEach(detach),Yl=claim_space(s4),cn=claim_element(s4,"LI",{}),Cm=children(cn),rn=claim_element(Cm,"SPAN",{}),Em=children(rn),Ql=claim_text(Em,"Carrum"),Em.forEach(detach),Cm.forEach(detach),Zl=claim_space(s4),sn=claim_element(s4,"LI",{}),km=children(sn),nn=claim_element(km,"SPAN",{}),Am=children(nn),td=claim_text(Am,"Chelsea"),Am.forEach(detach),km.forEach(detach),nd=claim_space(s4),Jt=claim_element(s4,"LI",{}),Sm=children(Jt),Zt=claim_element(Sm,"SPAN",{}),Mm=children(Zt),id=claim_text(Mm,"Chelsea Heights"),Mm.forEach(detach),Sm.forEach(detach),ad=claim_space(s4),Gt=claim_element(s4,"LI",{}),Fm=children(Gt),Yt=claim_element(Fm,"SPAN",{}),Tm=children(Yt),ld=claim_text(Tm,"Cheltenham (part)"),Tm.forEach(detach),Fm.forEach(detach),dd=claim_space(s4),Ut=claim_element(s4,"LI",{}),H3=children(Ut),Wt=claim_element(H3,"SPAN",{}),Dm=children(Wt),md=claim_text(Dm,"Clarinda"),Dm.forEach(detach),H3.forEach(detach),fd=claim_space(s4),Bt=claim_element(s4,"LI",{}),Nm=children(Bt),It=claim_element(Nm,"SPAN",{}),Lm=children(It),vd=claim_text(Lm,"Clayton South"),Lm.forEach(detach),Nm.forEach(detach),bd=claim_space(s4),Rt=claim_element(s4,"LI",{}),Rm=children(Rt),Lt=claim_element(Rm,"SPAN",{}),Pm=children(Lt),_d=claim_text(Pm,"Dingley Village"),Pm.forEach(detach),Rm.forEach(detach),wd=claim_space(s4),zt=claim_element(s4,"LI",{}),Hm=children(zt),Tt=claim_element(Hm,"SPAN",{}),Im=children(Tt),Cd=claim_text(Im,"Edithvale "),Im.forEach(detach),Hm.forEach(detach),Ed=claim_space(s4),St=claim_element(s4,"LI",{}),Bm=children(St),At=claim_element(Bm,"SPAN",{}),Vm=children(At),Sd=claim_text(Vm,"Heatherton Highett (part)"),Vm.forEach(detach),Bm.forEach(detach),Md=claim_space(s4),Ct=claim_element(s4,"LI",{}),$m=children(Ct),xt=claim_element($m,"SPAN",{}),Wm=children(xt),zd=claim_text(Wm,"Mentone"),Wm.forEach(detach),$m.forEach(detach),Dd=claim_space(s4),_t=claim_element(s4,"LI",{}),Um=children(_t),yt=claim_element(Um,"SPAN",{}),Km=children(yt),Rd=claim_text(Km,"Moorabbin"),Km.forEach(detach),Um.forEach(detach),Pd=claim_space(s4),vt=claim_element(s4,"LI",{}),qm=children(vt),gt=claim_element(qm,"SPAN",{}),Ym=children(gt),Bd=claim_text(Ym,"Moorabbin Airport"),Ym.forEach(detach),qm.forEach(detach),Vd=claim_space(s4),mt=claim_element(s4,"LI",{}),Gm=children(mt),ht=claim_element(Gm,"SPAN",{}),Xm=children(ht),Ud=claim_text(Xm,"Mordialloc"),Xm.forEach(detach),Gm.forEach(detach),Kd=claim_space(s4),lt=claim_element(s4,"LI",{}),Qm=children(lt),ct=claim_element(Qm,"SPAN",{}),Zm=children(ct),Gd=claim_text(Zm,"Oakleigh South (part)"),Zm.forEach(detach),Qm.forEach(detach),Xd=claim_space(s4),it=claim_element(s4,"LI",{}),Jm=children(it),ot=claim_element(Jm,"SPAN",{}),e8=children(ot),Jd=claim_text(e8,"Parkdale"),e8.forEach(detach),Jm.forEach(detach),eu=claim_space(s4),tt=claim_element(s4,"LI",{}),t8=children(tt),et=claim_element(t8,"SPAN",{}),n8=children(et),su=claim_text(n8,"Patterson Lakes and Waterways"),n8.forEach(detach),t8.forEach(detach),s4.forEach(detach),d4.forEach(detach),um.forEach(detach),ou=claim_space(i4),F=claim_element(i4,"UL",{class:!0,"data-category":!0}),s8=children(F),h=claim_element(s8,"LI",{class:!0}),l4=children(h),re=claim_element(l4,"BUTTON",{class:!0}),i8=children(re),ce=claim_element(i8,"SPAN",{class:!0}),a8=children(ce),lu=claim_text(a8,"Bass Coast"),a8.forEach(detach),i8.forEach(detach),du=claim_space(l4),le=claim_element(l4,"P",{class:!0}),r8=children(le),hu=claim_text(r8,"This is an area with two main industries: tourism and agriculture. With one of the highest growth rates in Victoria during peak holiday periods the population can grow to over 60000 in this area where the beautiful coastline meets the hinterland. With upcoming developments in Grantville, Coronet Bay and Philip Island, we are seeing many new paling fences gates and other fence styles in these areas as well wired fencing across acreages."),r8.forEach(detach),mu=claim_space(l4),i=claim_element(l4,"UL",{class:!0}),o4=children(i),He=claim_element(o4,"LI",{}),l8=children(He),Pe=claim_element(l8,"SPAN",{}),d8=children(Pe),vu=claim_text(d8,"Bass"),d8.forEach(detach),l8.forEach(detach),bu=claim_space(o4),Ne=claim_element(o4,"LI",{}),u8=children(Ne),De=claim_element(u8,"SPAN",{}),h8=children(De),_u=claim_text(h8,"Coronet Bay"),h8.forEach(detach),u8.forEach(detach),wu=claim_space(o4),Fe=claim_element(o4,"LI",{}),m8=children(Fe),Me=claim_element(m8,"SPAN",{}),f8=children(Me),Cu=claim_text(f8,"Cowes"),f8.forEach(detach),m8.forEach(detach),Eu=claim_space(o4),ke=claim_element(o4,"LI",{}),p8=children(ke),Ee=claim_element(p8,"SPAN",{}),g8=children(Ee),Su=claim_text(g8,"Dalyston"),g8.forEach(detach),p8.forEach(detach),Mu=claim_space(o4),Oe=claim_element(o4,"LI",{}),v8=children(Oe),we=claim_element(v8,"SPAN",{}),b8=children(we),zu=claim_text(b8,"Grantville"),b8.forEach(detach),v8.forEach(detach),Du=claim_space(o4),je=claim_element(o4,"LI",{}),j8=children(je),be=claim_element(j8,"SPAN",{}),y8=children(be),Ru=claim_text(y8,"Inverloch"),y8.forEach(detach),j8.forEach(detach),Pu=claim_space(o4),pe=claim_element(o4,"LI",{}),_8=children(pe),fe=claim_element(_8,"SPAN",{}),w8=children(fe),Bu=claim_text(w8,"Jam Jerrup"),w8.forEach(detach),_8.forEach(detach),Vu=claim_space(o4),ls=claim_element(o4,"LI",{}),O8=children(ls),Ve=claim_element(O8,"SPAN",{}),x8=children(Ve),Uu=claim_text(x8,"Lang Lang"),x8.forEach(detach),O8.forEach(detach),Ku=claim_space(o4),qe=claim_element(o4,"LI",{}),C8=children(qe),Xe=claim_element(C8,"SPAN",{}),E8=children(Xe),Gu=claim_text(E8,"Loch"),E8.forEach(detach),C8.forEach(detach),Xu=claim_space(o4),An=claim_element(o4,"LI",{}),k8=children(An),Fn=claim_element(k8,"SPAN",{}),A8=children(Fn),Ju=claim_text(A8,"Newhaven"),A8.forEach(detach),k8.forEach(detach),e1=claim_space(o4),Ln=claim_element(o4,"LI",{}),S8=children(Ln),Hn=claim_element(S8,"SPAN",{}),M8=children(Hn),s1=claim_text(M8,"North Wonthaggi"),M8.forEach(detach),S8.forEach(detach),o1=claim_space(o4),qn=claim_element(o4,"LI",{}),F8=children(qn),Yn=claim_element(F8,"SPAN",{}),T8=children(Yn),r1=claim_text(T8,"Pioneer Bay"),T8.forEach(detach),F8.forEach(detach),c1=claim_space(o4),Qn=claim_element(o4,"LI",{}),z8=children(Qn),es=claim_element(z8,"SPAN",{}),D8=children(es),u1=claim_text(D8,"Rhyll"),D8.forEach(detach),z8.forEach(detach),h1=claim_space(o4),Ds=claim_element(o4,"LI",{}),N8=children(Ds),Ns=claim_element(N8,"SPAN",{}),L8=children(Ns),p1=claim_text(L8,"San Remo"),L8.forEach(detach),N8.forEach(detach),g1=claim_space(o4),Ls=claim_element(o4,"LI",{}),R8=children(Ls),Rs=claim_element(R8,"SPAN",{}),P8=children(Rs),j1=claim_text(P8,"Silverleaves"),P8.forEach(detach),R8.forEach(detach),y1=claim_space(o4),Is=claim_element(o4,"LI",{}),H8=children(Is),$s=claim_element(H8,"SPAN",{}),I8=children($s),O1=claim_text(I8,"Smiths Beach"),I8.forEach(detach),H8.forEach(detach),x1=claim_space(o4),Ui=claim_element(o4,"LI",{}),B8=children(Ui),Ki=claim_element(B8,"SPAN",{}),V8=children(Ki),k1=claim_text(V8,"The Gurdies"),V8.forEach(detach),B8.forEach(detach),A1=claim_space(o4),qi=claim_element(o4,"LI",{}),$8=children(qi),Yi=claim_element($8,"SPAN",{}),W8=children(Yi),F1=claim_text(W8,"Wonthaggi"),W8.forEach(detach),$8.forEach(detach),T1=claim_space(o4),Qi=claim_element(o4,"LI",{}),U8=children(Qi),ea=claim_element(U8,"SPAN",{}),K8=children(ea),N1=claim_text(K8,"Woolamai"),K8.forEach(detach),U8.forEach(detach),o4.forEach(detach),l4.forEach(detach),s8.forEach(detach),L1=claim_space(i4),D=claim_element(i4,"UL",{class:!0,"data-category":!0}),q8=children(D),g=claim_element(q8,"LI",{class:!0}),g4=children(g),X=claim_element(g4,"BUTTON",{class:!0}),G8=children(X),R=claim_element(G8,"SPAN",{class:!0}),X8=children(R),B1=claim_text(X8,"Baw Baw"),X8.forEach(detach),G8.forEach(detach),V1=claim_space(g4),Q=claim_element(g4,"P",{class:!0}),Q8=children(Q),W1=claim_text(Q8,"A predominantly rural area Baw Baw comprises of industry including horticulture, dairy farming and forestry. This area is seeing more urban growth particularly in the Drouin and Warragul areas, with new estates requiring fencing including paling and colorbond styles, driveway and entry gates"),Q8.forEach(detach),g4.forEach(detach),q8.forEach(detach),U1=claim_space(i4),S=claim_element(i4,"UL",{class:!0,"data-category":!0}),Z8=children(S),v=claim_element(Z8,"LI",{class:!0}),v4=children(v),J=claim_element(v4,"BUTTON",{class:!0}),ef=children(J),oe=claim_element(ef,"SPAN",{class:!0}),tf=children(oe),X1=claim_text(tf,"South Gippsland"),tf.forEach(detach),ef.forEach(detach),Q1=claim_space(v4),ie=claim_element(v4,"P",{class:!0}),A3=children(ie),J1=claim_text(A3,"A widespread area of rural and farming land, South Gippsland has an array of retail trade, fishing hospitality and tourism. This region requires a mixture of all fences and gates including residential, farming, commercial along with public recreational areas."),A3.forEach(detach),v4.forEach(detach),Z8.forEach(detach),i4.forEach(detach),p4.forEach(detach),b4.forEach(detach),nf.forEach(detach),this.h()},h(){attr(ae,"class","cs-topper"),attr(se,"class","cs-title"),attr(Z,"class","cs-text"),attr(m,"class","cs-content"),attr(k,"class","cs-option"),attr(k,"data-filter","one"),attr(N,"class","cs-option"),attr(N,"data-filter","two"),attr(_,"href","#casey"),attr(_,"class","cs-option"),attr(_,"data-filter","three"),attr(x,"class","cs-option"),attr(x,"data-filter","four"),attr(w,"class","cs-option"),attr(w,"data-filter","five"),attr(M,"class","cs-option"),attr(M,"data-filter","six"),attr(z,"class","cs-option"),attr(z,"data-filter","seven"),attr(L,"class","cs-option"),attr(L,"data-filter","eight"),attr(c,"class","cs-button-group"),attr($,"class","cs-button-text"),attr(V,"class","cs-button"),attr(K,"class","cs-item-p"),attr(n,"class","ul cs-item-p svelte-oge27d"),attr(u,"class","cs-faq-item active"),attr(T,"class","cs-faq-group"),attr(T,"data-category","one"),attr(q,"class","cs-button-text"),attr(Y,"class","cs-button"),attr(U,"class","cs-item-p"),attr(a,"class","ul cs-item-p svelte-oge27d"),attr(p,"class","cs-faq-item active"),attr(E,"class","cs-faq-group"),attr(E,"data-category","two"),attr(H,"class","cs-button-text"),attr(P,"class","cs-button"),attr(I,"class","cs-item-p"),attr(s,"class","ul cs-item-p svelte-oge27d"),attr(f,"class","cs-faq-item active"),attr(b,"id","casey"),attr(b,"class","cs-faq-group"),attr(b,"data-category","three"),attr(W,"class","cs-button-text"),attr(B,"class","cs-button"),attr(G,"class","cs-item-p"),attr(t,"class","ul cs-item-p svelte-oge27d"),attr(l,"class","cs-faq-item active"),attr(O,"class","cs-faq-group"),attr(O,"data-category","four"),attr(te,"class","cs-button-text"),attr(ee,"class","cs-button"),attr(ne,"class","cs-item-p"),attr(o,"class","ul cs-item-p svelte-oge27d"),attr(d,"class","cs-faq-item active"),attr(C,"class","cs-faq-group"),attr(C,"data-category","five"),attr(ce,"class","cs-button-text"),attr(re,"class","cs-button"),attr(le,"class","cs-item-p"),attr(i,"class","ul cs-item-p svelte-oge27d"),attr(h,"class","cs-faq-item active"),attr(F,"class","cs-faq-group"),attr(F,"data-category","six"),attr(R,"class","cs-button-text"),attr(X,"class","cs-button"),attr(Q,"class","cs-item-p"),attr(g,"class","cs-faq-item active"),attr(D,"class","cs-faq-group"),attr(D,"data-category","seven"),attr(oe,"class","cs-button-text"),attr(J,"class","cs-button"),attr(ie,"class","cs-item-p"),attr(v,"class","cs-faq-item active"),attr(S,"class","cs-faq-group cs-hidden"),attr(S,"data-category","eight"),attr(r,"class","cs-wrapper"),attr(j,"class","cs-flex-group"),attr(y,"class","cs-container"),attr(A,"id","faq-1346")},m(e,e4){insert_hydration(e,A,e4),append_hydration(A,y),append_hydration(y,m),append_hydration(m,ae),append_hydration(ae,Z1),append_hydration(m,G1),append_hydration(m,se),append_hydration(se,Y1),append_hydration(m,q1),append_hydration(m,Z),append_hydration(Z,K1),append_hydration(y,$1),append_hydration(y,j),append_hydration(j,c),append_hydration(c,k),append_hydration(k,I1),append_hydration(c,H1),append_hydration(c,N),append_hydration(N,P1),append_hydration(c,R1),append_hydration(c,_),append_hydration(_,D1),append_hydration(c,z1),append_hydration(c,x),append_hydration(x,M1),append_hydration(c,S1),append_hydration(c,w),append_hydration(w,E1),append_hydration(c,C1),append_hydration(c,M),append_hydration(M,w1),append_hydration(c,_1),append_hydration(c,z),append_hydration(z,b1),append_hydration(c,v1),append_hydration(c,L),append_hydration(L,f1),append_hydration(j,m1),append_hydration(j,r),append_hydration(r,T),append_hydration(T,u),append_hydration(u,V),append_hydration(V,$),append_hydration($,d1),append_hydration(u,l1),append_hydration(u,K),append_hydration(K,a1),append_hydration(u,i1),append_hydration(u,n),append_hydration(n,Kn),append_hydration(Kn,Un),append_hydration(Un,n1),append_hydration(n,t1),append_hydration(n,Nn),append_hydration(Nn,Tn),append_hydration(Tn,Zu),append_hydration(n,Qu),append_hydration(n,kn),append_hydration(kn,Qe),append_hydration(Qe,Yu),append_hydration(n,qu),append_hydration(n,Ke),append_hydration(Ke,$e),append_hydration($e,Wu),append_hydration(n,$u),append_hydration(n,he),append_hydration(he,me),append_hydration(me,Iu),append_hydration(n,Hu),append_hydration(n,ge),append_hydration(ge,ve),append_hydration(ve,Lu),append_hydration(n,Nu),append_hydration(n,ye),append_hydration(ye,_e),append_hydration(_e,Tu),append_hydration(n,Fu),append_hydration(n,xe),append_hydration(xe,Ce),append_hydration(Ce,Au),append_hydration(n,ku),append_hydration(n,Ae),append_hydration(Ae,Se),append_hydration(Se,xu),append_hydration(n,Ou),append_hydration(n,Te),append_hydration(Te,ze),append_hydration(ze,yu),append_hydration(n,ju),append_hydration(n,Le),append_hydration(Le,Re),append_hydration(Re,gu),append_hydration(n,pu),append_hydration(n,Ie),append_hydration(Ie,Be),append_hydration(Be,fu),append_hydration(n,uu),append_hydration(n,We),append_hydration(We,Ue),append_hydration(Ue,cu),append_hydration(n,ru),append_hydration(n,Ye),append_hydration(Ye,Ge),append_hydration(Ge,au),append_hydration(n,iu),append_hydration(n,Ze),append_hydration(Ze,Je),append_hydration(Je,nu),append_hydration(n,tu),append_hydration(n,nt),append_hydration(nt,st),append_hydration(st,Zd),append_hydration(n,Qd),append_hydration(n,at),append_hydration(at,rt),append_hydration(rt,Yd),append_hydration(n,qd),append_hydration(n,dt),append_hydration(dt,ut),append_hydration(ut,Wd),append_hydration(n,$d),append_hydration(n,ft),append_hydration(ft,pt),append_hydration(pt,Id),append_hydration(n,Hd),append_hydration(n,bt),append_hydration(bt,jt),append_hydration(jt,Ld),append_hydration(n,Nd),append_hydration(n,wt),append_hydration(wt,Ot),append_hydration(Ot,Td),append_hydration(n,Fd),append_hydration(n,Et),append_hydration(Et,kt),append_hydration(kt,Ad),append_hydration(n,kd),append_hydration(n,Mt),append_hydration(Mt,Ft),append_hydration(Ft,xd),append_hydration(n,Od),append_hydration(n,Dt),append_hydration(Dt,Nt),append_hydration(Nt,yd),append_hydration(n,jd),append_hydration(n,Pt),append_hydration(Pt,Ht),append_hydration(Ht,gd),append_hydration(n,pd),append_hydration(n,Vt),append_hydration(Vt,$t),append_hydration($t,hd),append_hydration(n,ud),append_hydration(n,Kt),append_hydration(Kt,qt),append_hydration(qt,cd),append_hydration(n,rd),append_hydration(n,Xt),append_hydration(Xt,Qt),append_hydration(Qt,od),append_hydration(n,sd),append_hydration(n,en),append_hydration(en,tn),append_hydration(tn,ed),append_hydration(n,Jl),append_hydration(n,on),append_hydration(on,an),append_hydration(an,Xl),append_hydration(n,Gl),append_hydration(n,ln),append_hydration(ln,dn),append_hydration(dn,Kl),append_hydration(n,Ul),append_hydration(n,mn),append_hydration(mn,fn),append_hydration(fn,Vl),append_hydration(n,Bl),append_hydration(n,vn),append_hydration(vn,bn),append_hydration(bn,Pl),append_hydration(n,Rl),append_hydration(n,_n),append_hydration(_n,wn),append_hydration(wn,Dl),append_hydration(n,zl),append_hydration(n,Cn),append_hydration(Cn,En),append_hydration(En,ra),append_hydration(n,Tl),append_hydration(n,de),append_hydration(de,Mn),append_hydration(Mn,Sl),append_hydration(n,El),append_hydration(n,zn),append_hydration(zn,Dn),append_hydration(Dn,Cl),append_hydration(n,xl),append_hydration(n,Rn),append_hydration(Rn,Pn),append_hydration(Pn,Ol),append_hydration(n,yl),append_hydration(n,Bn),append_hydration(Bn,Vn),append_hydration(Vn,jl),append_hydration(r,gl),append_hydration(r,E),append_hydration(E,p),append_hydration(p,Y),append_hydration(Y,q),append_hydration(q,pl),append_hydration(p,hl),append_hydration(p,U),append_hydration(U,ul),append_hydration(p,cl),append_hydration(p,a),append_hydration(a,ts),append_hydration(ts,ns),append_hydration(ns,rl),append_hydration(a,ol),append_hydration(a,is),append_hydration(is,rs),append_hydration(rs,sl),append_hydration(a,el),append_hydration(a,ds),append_hydration(ds,us),append_hydration(us,Jc),append_hydration(a,Xc),append_hydration(a,fs),append_hydration(fs,ps),append_hydration(ps,Gc),append_hydration(a,Kc),append_hydration(a,bs),append_hydration(bs,js),append_hydration(js,Uc),append_hydration(a,Vc),append_hydration(a,ws),append_hydration(ws,Os),append_hydration(Os,Bc),append_hydration(a,Pc),append_hydration(a,Es),append_hydration(Es,ks),append_hydration(ks,Rc),append_hydration(a,Dc),append_hydration(a,Ms),append_hydration(Ms,Fs),append_hydration(Fs,zc),append_hydration(r,Mc),append_hydration(r,b),append_hydration(b,f),append_hydration(f,P),append_hydration(P,H),append_hydration(H,Sc),append_hydration(f,Ec),append_hydration(f,I),append_hydration(I,Cc),append_hydration(f,wc),append_hydration(f,s),append_hydration(s,Ws),append_hydration(Ws,Us),append_hydration(Us,_c),append_hydration(s,bc),append_hydration(s,Ys),append_hydration(Ys,Gs),append_hydration(Gs,vc),append_hydration(s,fc),append_hydration(s,Zs),append_hydration(Zs,Js),append_hydration(Js,mc),append_hydration(s,dc),append_hydration(s,no),append_hydration(no,so),append_hydration(so,lc),append_hydration(s,ac),append_hydration(s,ao),append_hydration(ao,ro),append_hydration(ro,ic),append_hydration(s,nc),append_hydration(s,uo),append_hydration(uo,ho),append_hydration(ho,tc),append_hydration(s,Zr),append_hydration(s,po),append_hydration(po,go),append_hydration(go,Qr),append_hydration(s,Yr),append_hydration(s,jo),append_hydration(jo,yo),append_hydration(yo,qr),append_hydration(s,Wr),append_hydration(s,Oo),append_hydration(Oo,xo),append_hydration(xo,$r),append_hydration(s,Ir),append_hydration(s,ko),append_hydration(ko,Ao),append_hydration(Ao,Hr),append_hydration(s,Lr),append_hydration(s,Fo),append_hydration(Fo,To),append_hydration(To,Nr),append_hydration(s,Tr),append_hydration(s,No),append_hydration(No,Lo),append_hydration(Lo,Fr),append_hydration(s,Ar),append_hydration(s,Ho),append_hydration(Ho,Io),append_hydration(Io,kr),append_hydration(s,xr),append_hydration(s,$o),append_hydration($o,Wo),append_hydration(Wo,Or),append_hydration(s,yr),append_hydration(s,qo),append_hydration(qo,Yo),append_hydration(Yo,jr),append_hydration(s,gr),append_hydration(s,Qo),append_hydration(Qo,Zo),append_hydration(Zo,pr),append_hydration(s,hr),append_hydration(s,ti),append_hydration(ti,ni),append_hydration(ni,ur),append_hydration(s,cr),append_hydration(s,ii),append_hydration(ii,ai),append_hydration(ai,rr),append_hydration(s,or),append_hydration(s,li),append_hydration(li,di),append_hydration(di,sr),append_hydration(s,er),append_hydration(s,mi),append_hydration(mi,fi),append_hydration(fi,Ja),append_hydration(s,Xa),append_hydration(s,vi),append_hydration(vi,bi),append_hydration(bi,Ga),append_hydration(s,Ka),append_hydration(s,_i),append_hydration(_i,wi),append_hydration(wi,Ua),append_hydration(s,Va),append_hydration(s,Ci),append_hydration(Ci,Ei),append_hydration(Ei,Ba),append_hydration(s,Pa),append_hydration(s,Si),append_hydration(Si,Mi),append_hydration(Mi,Ra),append_hydration(s,Da),append_hydration(s,zi),append_hydration(zi,Di),append_hydration(Di,za),append_hydration(s,Ma),append_hydration(s,Ri),append_hydration(Ri,Pi),append_hydration(Pi,Sa),append_hydration(s,Ea),append_hydration(s,Bi),append_hydration(Bi,Vi),append_hydration(Vi,Ca),append_hydration(r,wa),append_hydration(r,O),append_hydration(O,l),append_hydration(l,B),append_hydration(B,W),append_hydration(W,_a),append_hydration(l,ba),append_hydration(l,G),append_hydration(G,va),append_hydration(l,fa),append_hydration(l,t),append_hydration(t,ta),append_hydration(ta,na),append_hydration(na,ma),append_hydration(t,da),append_hydration(t,ia),append_hydration(ia,aa),append_hydration(aa,la),append_hydration(t,ca),append_hydration(t,Sn),append_hydration(Sn,oa),append_hydration(oa,ua),append_hydration(t,ha),append_hydration(t,sa),append_hydration(sa,Ji),append_hydration(Ji,pa),append_hydration(t,ga),append_hydration(t,Zi),append_hydration(Zi,Xi),append_hydration(Xi,ja),append_hydration(t,ya),append_hydration(t,Gi),append_hydration(Gi,Wi),append_hydration(Wi,Oa),append_hydration(t,xa),append_hydration(t,$i),append_hydration($i,Ii),append_hydration(Ii,ka),append_hydration(t,Aa),append_hydration(t,Hi),append_hydration(Hi,Li),append_hydration(Li,Fa),append_hydration(t,Ta),append_hydration(t,Ni),append_hydration(Ni,Ti),append_hydration(Ti,Na),append_hydration(t,La),append_hydration(t,Fi),append_hydration(Fi,Ai),append_hydration(Ai,Ha),append_hydration(t,Ia),append_hydration(t,ki),append_hydration(ki,xi),append_hydration(xi,$a),append_hydration(t,Wa),append_hydration(t,Oi),append_hydration(Oi,yi),append_hydration(yi,qa),append_hydration(t,Ya),append_hydration(t,ji),append_hydration(ji,gi),append_hydration(gi,Qa),append_hydration(t,Za),append_hydration(t,pi),append_hydration(pi,hi),append_hydration(hi,tr),append_hydration(t,nr),append_hydration(t,ui),append_hydration(ui,ci),append_hydration(ci,ir),append_hydration(t,ar),append_hydration(t,ri),append_hydration(ri,oi),append_hydration(oi,lr),append_hydration(t,dr),append_hydration(t,si),append_hydration(si,ei),append_hydration(ei,mr),append_hydration(t,fr),append_hydration(t,Jo),append_hydration(Jo,Xo),append_hydration(Xo,vr),append_hydration(t,br),append_hydration(t,Go),append_hydration(Go,Ko),append_hydration(Ko,_r),append_hydration(t,wr),append_hydration(t,Uo),append_hydration(Uo,Vo),append_hydration(Vo,Cr),append_hydration(t,Er),append_hydration(t,Bo),append_hydration(Bo,Po),append_hydration(Po,Sr),append_hydration(t,Mr),append_hydration(t,Ro),append_hydration(Ro,Do),append_hydration(Do,zr),append_hydration(t,Dr),append_hydration(t,zo),append_hydration(zo,Mo),append_hydration(Mo,Rr),append_hydration(t,Pr),append_hydration(t,So),append_hydration(So,Eo),append_hydration(Eo,Br),append_hydration(t,Vr),append_hydration(t,Co),append_hydration(Co,wo),append_hydration(wo,Ur),append_hydration(t,Kr),append_hydration(t,_o),append_hydration(_o,bo),append_hydration(bo,Gr),append_hydration(t,Xr),append_hydration(t,vo),append_hydration(vo,fo),append_hydration(fo,Jr),append_hydration(t,ec),append_hydration(t,mo),append_hydration(mo,lo),append_hydration(lo,sc),append_hydration(t,oc),append_hydration(t,co),append_hydration(co,io),append_hydration(io,rc),append_hydration(t,cc),append_hydration(t,oo),append_hydration(oo,to),append_hydration(to,uc),append_hydration(t,hc),append_hydration(t,eo),append_hydration(eo,Qs),append_hydration(Qs,pc),append_hydration(t,gc),append_hydration(t,Xs),append_hydration(Xs,qs),append_hydration(qs,jc),append_hydration(t,yc),append_hydration(t,Ks),append_hydration(Ks,Vs),append_hydration(Vs,Oc),append_hydration(t,xc),append_hydration(t,Bs),append_hydration(Bs,Hs),append_hydration(Hs,kc),append_hydration(t,Ac),append_hydration(t,Ps),append_hydration(Ps,zs),append_hydration(zs,Fc),append_hydration(t,Tc),append_hydration(t,Ts),append_hydration(Ts,Ss),append_hydration(Ss,Nc),append_hydration(t,Lc),append_hydration(t,As),append_hydration(As,Cs),append_hydration(Cs,Hc),append_hydration(t,Ic),append_hydration(t,xs),append_hydration(xs,_s),append_hydration(_s,$c),append_hydration(t,Wc),append_hydration(t,ys),append_hydration(ys,vs),append_hydration(vs,qc),append_hydration(t,Yc),append_hydration(t,gs),append_hydration(gs,ms),append_hydration(ms,Qc),append_hydration(t,Zc),append_hydration(t,hs),append_hydration(hs,ue),append_hydration(ue,tl),append_hydration(t,nl),append_hydration(t,cs),append_hydration(cs,os),append_hydration(os,il),append_hydration(t,al),append_hydration(t,ss),append_hydration(ss,Jn),append_hydration(Jn,ll),append_hydration(t,dl),append_hydration(t,Zn),append_hydration(Zn,Xn),append_hydration(Xn,ml),append_hydration(t,fl),append_hydration(t,Gn),append_hydration(Gn,Wn),append_hydration(Wn,vl),append_hydration(t,bl),append_hydration(t,$n),append_hydration($n,In),append_hydration(In,_l),append_hydration(r,wl),append_hydration(r,C),append_hydration(C,d),append_hydration(d,ee),append_hydration(ee,te),append_hydration(te,kl),append_hydration(d,Al),append_hydration(d,ne),append_hydration(ne,Ml),append_hydration(d,Fl),append_hydration(d,o),append_hydration(o,xn),append_hydration(xn,On),append_hydration(On,Nl),append_hydration(o,Ll),append_hydration(o,yn),append_hydration(yn,jn),append_hydration(jn,Hl),append_hydration(o,Il),append_hydration(o,gn),append_hydration(gn,pn),append_hydration(pn,$l),append_hydration(o,Wl),append_hydration(o,hn),append_hydration(hn,un),append_hydration(un,ql),append_hydration(o,Yl),append_hydration(o,cn),append_hydration(cn,rn),append_hydration(rn,Ql),append_hydration(o,Zl),append_hydration(o,sn),append_hydration(sn,nn),append_hydration(nn,td),append_hydration(o,nd),append_hydration(o,Jt),append_hydration(Jt,Zt),append_hydration(Zt,id),append_hydration(o,ad),append_hydration(o,Gt),append_hydration(Gt,Yt),append_hydration(Yt,ld),append_hydration(o,dd),append_hydration(o,Ut),append_hydration(Ut,Wt),append_hydration(Wt,md),append_hydration(o,fd),append_hydration(o,Bt),append_hydration(Bt,It),append_hydration(It,vd),append_hydration(o,bd),append_hydration(o,Rt),append_hydration(Rt,Lt),append_hydration(Lt,_d),append_hydration(o,wd),append_hydration(o,zt),append_hydration(zt,Tt),append_hydration(Tt,Cd),append_hydration(o,Ed),append_hydration(o,St),append_hydration(St,At),append_hydration(At,Sd),append_hydration(o,Md),append_hydration(o,Ct),append_hydration(Ct,xt),append_hydration(xt,zd),append_hydration(o,Dd),append_hydration(o,_t),append_hydration(_t,yt),append_hydration(yt,Rd),append_hydration(o,Pd),append_hydration(o,vt),append_hydration(vt,gt),append_hydration(gt,Bd),append_hydration(o,Vd),append_hydration(o,mt),append_hydration(mt,ht),append_hydration(ht,Ud),append_hydration(o,Kd),append_hydration(o,lt),append_hydration(lt,ct),append_hydration(ct,Gd),append_hydration(o,Xd),append_hydration(o,it),append_hydration(it,ot),append_hydration(ot,Jd),append_hydration(o,eu),append_hydration(o,tt),append_hydration(tt,et),append_hydration(et,su),append_hydration(r,ou),append_hydration(r,F),append_hydration(F,h),append_hydration(h,re),append_hydration(re,ce),append_hydration(ce,lu),append_hydration(h,du),append_hydration(h,le),append_hydration(le,hu),append_hydration(h,mu),append_hydration(h,i),append_hydration(i,He),append_hydration(He,Pe),append_hydration(Pe,vu),append_hydration(i,bu),append_hydration(i,Ne),append_hydration(Ne,De),append_hydration(De,_u),append_hydration(i,wu),append_hydration(i,Fe),append_hydration(Fe,Me),append_hydration(Me,Cu),append_hydration(i,Eu),append_hydration(i,ke),append_hydration(ke,Ee),append_hydration(Ee,Su),append_hydration(i,Mu),append_hydration(i,Oe),append_hydration(Oe,we),append_hydration(we,zu),append_hydration(i,Du),append_hydration(i,je),append_hydration(je,be),append_hydration(be,Ru),append_hydration(i,Pu),append_hydration(i,pe),append_hydration(pe,fe),append_hydration(fe,Bu),append_hydration(i,Vu),append_hydration(i,ls),append_hydration(ls,Ve),append_hydration(Ve,Uu),append_hydration(i,Ku),append_hydration(i,qe),append_hydration(qe,Xe),append_hydration(Xe,Gu),append_hydration(i,Xu),append_hydration(i,An),append_hydration(An,Fn),append_hydration(Fn,Ju),append_hydration(i,e1),append_hydration(i,Ln),append_hydration(Ln,Hn),append_hydration(Hn,s1),append_hydration(i,o1),append_hydration(i,qn),append_hydration(qn,Yn),append_hydration(Yn,r1),append_hydration(i,c1),append_hydration(i,Qn),append_hydration(Qn,es),append_hydration(es,u1),append_hydration(i,h1),append_hydration(i,Ds),append_hydration(Ds,Ns),append_hydration(Ns,p1),append_hydration(i,g1),append_hydration(i,Ls),append_hydration(Ls,Rs),append_hydration(Rs,j1),append_hydration(i,y1),append_hydration(i,Is),append_hydration(Is,$s),append_hydration($s,O1),append_hydration(i,x1),append_hydration(i,Ui),append_hydration(Ui,Ki),append_hydration(Ki,k1),append_hydration(i,A1),append_hydration(i,qi),append_hydration(qi,Yi),append_hydration(Yi,F1),append_hydration(i,T1),append_hydration(i,Qi),append_hydration(Qi,ea),append_hydration(ea,N1),append_hydration(r,L1),append_hydration(r,D),append_hydration(D,g),append_hydration(g,X),append_hydration(X,R),append_hydration(R,B1),append_hydration(g,V1),append_hydration(g,Q),append_hydration(Q,W1),append_hydration(r,U1),append_hydration(r,S),append_hydration(S,v),append_hydration(v,J),append_hydration(J,oe),append_hydration(oe,X1),append_hydration(v,Q1),append_hydration(v,ie),append_hydration(ie,J1)},p:noop,i:noop,o:noop,d(e){e&&detach(A)}}}class Component extends SvelteComponent{constructor(e){super(),init(this,e,null,create_fragment,safe_not_equal,{})}}export default Component